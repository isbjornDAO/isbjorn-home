/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PuppetMinter,
  PuppetMinterInterface,
} from "../../../contracts/PostPuppetMint/PuppetMinter";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiverAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "amount",
        type: "uint32",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puppets",
    outputs: [
      {
        internalType: "contract IPuppets",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "rescuePuppet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610b36806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed578063a71bbebe1461010b578063f2fde38b14610127578063faac26371461014357610088565b806316fed3e21461008d578063485cc955146100ab578063715018a6146100c7578063721f8480146100d1575b600080fd5b610095610161565b6040516100a29190610767565b60405180910390f35b6100c560048036038101906100c091906107b3565b610187565b005b6100cf610215565b005b6100eb60048036038101906100e69190610829565b610229565b005b6100f56102e7565b6040516101029190610767565b60405180910390f35b61012560048036038101906101209190610892565b610310565b005b610141600480360381019061013c91906108bf565b610527565b005b61014b6105ad565b604051610158919061094b565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018f6105d3565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61021d6105d3565b610227600061065a565b565b6102316105d3565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016102b293929190610975565b600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a491906109c1565b6103ae9190610a1d565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312ea50248360056040518363ffffffff1660e01b815260040161040e929190610ad7565b600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505060005b8263ffffffff16811015610522576000818361045f9190610a1d565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016104e293929190610975565b600060405180830381600087803b1580156104fc57600080fd5b505af1158015610510573d6000803e3d6000fd5b50505050508080600101915050610443565b505050565b61052f6105d3565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036105a15760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105989190610767565b60405180910390fd5b6105aa8161065a565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105db61071e565b73ffffffffffffffffffffffffffffffffffffffff166105f96102e7565b73ffffffffffffffffffffffffffffffffffffffff16146106585761061c61071e565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064f9190610767565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061075182610726565b9050919050565b61076181610746565b82525050565b600060208201905061077c6000830184610758565b92915050565b600080fd5b61079081610746565b811461079b57600080fd5b50565b6000813590506107ad81610787565b92915050565b600080604083850312156107ca576107c9610782565b5b60006107d88582860161079e565b92505060206107e98582860161079e565b9150509250929050565b6000819050919050565b610806816107f3565b811461081157600080fd5b50565b600081359050610823816107fd565b92915050565b60006020828403121561083f5761083e610782565b5b600061084d84828501610814565b91505092915050565b600063ffffffff82169050919050565b61086f81610856565b811461087a57600080fd5b50565b60008135905061088c81610866565b92915050565b6000602082840312156108a8576108a7610782565b5b60006108b68482850161087d565b91505092915050565b6000602082840312156108d5576108d4610782565b5b60006108e38482850161079e565b91505092915050565b6000819050919050565b600061091161090c61090784610726565b6108ec565b610726565b9050919050565b6000610923826108f6565b9050919050565b600061093582610918565b9050919050565b6109458161092a565b82525050565b6000602082019050610960600083018461093c565b92915050565b61096f816107f3565b82525050565b600060608201905061098a6000830186610758565b6109976020830185610758565b6109a46040830184610966565b949350505050565b6000815190506109bb816107fd565b92915050565b6000602082840312156109d7576109d6610782565b5b60006109e5848285016109ac565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a28826107f3565b9150610a33836107f3565b9250828201905080821115610a4b57610a4a6109ee565b5b92915050565b610a5a81610856565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610aa057610a9f610a60565b5b50565b6000819050610ab182610a8f565b919050565b6000610ac182610aa3565b9050919050565b610ad181610ab6565b82525050565b6000604082019050610aec6000830185610a51565b610af96020830184610ac8565b939250505056fea2646970667358221220798ccc68c6b64d472e87e4ec302e90afc19dad1eac8ab43abd5f8f0c3cdbd08b64736f6c63430008180033";

type PuppetMinterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PuppetMinterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PuppetMinter__factory extends ContractFactory {
  constructor(...args: PuppetMinterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PuppetMinter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PuppetMinter__factory {
    return super.connect(runner) as PuppetMinter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PuppetMinterInterface {
    return new Interface(_abi) as PuppetMinterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PuppetMinter {
    return new Contract(address, _abi, runner) as unknown as PuppetMinter;
  }
}
