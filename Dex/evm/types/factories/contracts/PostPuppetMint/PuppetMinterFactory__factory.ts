/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PuppetMinterFactory,
  PuppetMinterFactoryInterface,
} from "../../../contracts/PostPuppetMint/PuppetMinterFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_nftContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_receiverAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "buyerImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "count",
        type: "uint32",
      },
    ],
    name: "deployBuyers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "receiverAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_receiverAddress",
        type: "address",
      },
    ],
    name: "setReceiverAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3838038062001a388339818101604052810190620000379190620002f1565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000349565b60405180910390fd5b620000be81620001b560201b60201c565b5081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040516200014f9062000279565b604051809103906000f0801580156200016c573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505062000366565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610cf98062000d3f83390190565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002b9826200028c565b9050919050565b620002cb81620002ac565b8114620002d757600080fd5b50565b600081519050620002eb81620002c0565b92915050565b600080604083850312156200030b576200030a62000287565b5b60006200031b85828601620002da565b92505060206200032e85828601620002da565b9150509250929050565b6200034381620002ac565b82525050565b600060208201905062000360600083018462000338565b92915050565b6109c980620003766000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638279c7db116100665780638279c7db146100fa5780638da5cb5b14610116578063996517cf14610134578063d56d229d14610152578063f2fde38b1461017057610093565b806304e5dd141461009857806310b608ea146100b657806316fed3e2146100d2578063715018a6146100f0575b600080fd5b6100a061018c565b6040516100ad9190610762565b60405180910390f35b6100d060048036038101906100cb91906107be565b6101b2565b005b6100da610362565b6040516100e79190610762565b60405180910390f35b6100f8610388565b005b610114600480360381019061010f9190610817565b61039c565b005b61011e6103e8565b60405161012b9190610762565b60405180910390f35b61013c610411565b604051610149919061085d565b60405180910390f35b61015a610416565b6040516101679190610762565b60405180910390f35b61018a60048036038101906101859190610817565b61043c565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101ba6104c2565b60005b8163ffffffff168163ffffffff16101561035e57600081836101df91906108a7565b90506000600a8263ffffffff1610156101f857816101fb565b600a5b9050600061022a600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610549565b90508073ffffffffffffffffffffffffffffffffffffffff1663485cc955600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518363ffffffff1660e01b81526004016102ab9291906108df565b600060405180830381600087803b1580156102c557600080fd5b505af11580156102d9573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663a71bbebe836040518263ffffffff1660e01b81526004016103169190610917565b600060405180830381600087803b15801561033057600080fd5b505af1158015610344573d6000803e3d6000fd5b5050505081846103549190610932565b93505050506101bd565b5050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103906104c2565b61039a600061055d565b565b6103a46104c2565b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a81565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6104446104c2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104b65760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016104ad9190610762565b60405180910390fd5b6104bf8161055d565b50565b6104ca610621565b73ffffffffffffffffffffffffffffffffffffffff166104e86103e8565b73ffffffffffffffffffffffffffffffffffffffff16146105475761050b610621565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161053e9190610762565b60405180910390fd5b565b6000610556826000610629565b9050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000814710156106725747826040517fcf47918100000000000000000000000000000000000000000000000000000000815260040161066992919061096a565b60405180910390fd5b763d602d80600a3d3981f3363d3d373d3d3d363d730000008360601b60e81c176000526e5af43d82803e903d91602b57fd5bf38360781b176020526037600983f09050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361071b576040517fb06ebf3d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074c82610721565b9050919050565b61075c81610741565b82525050565b60006020820190506107776000830184610753565b92915050565b600080fd5b600063ffffffff82169050919050565b61079b81610782565b81146107a657600080fd5b50565b6000813590506107b881610792565b92915050565b6000602082840312156107d4576107d361077d565b5b60006107e2848285016107a9565b91505092915050565b6107f481610741565b81146107ff57600080fd5b50565b600081359050610811816107eb565b92915050565b60006020828403121561082d5761082c61077d565b5b600061083b84828501610802565b91505092915050565b6000819050919050565b61085781610844565b82525050565b6000602082019050610872600083018461084e565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108b282610782565b91506108bd83610782565b9250828203905063ffffffff8111156108d9576108d8610878565b5b92915050565b60006040820190506108f46000830185610753565b6109016020830184610753565b9392505050565b61091181610782565b82525050565b600060208201905061092c6000830184610908565b92915050565b600061093d82610782565b915061094883610782565b9250828201905063ffffffff81111561096457610963610878565b5b92915050565b600060408201905061097f600083018561084e565b61098c602083018461084e565b939250505056fea264697066735822122068eb6b2dcaec801bea1f1f778bc71f3f4d3e097fdb55706a297b3f6774b2fb1764736f6c63430008180033608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b919061019e565b60405180910390fd5b6100938161009960201b60201c565b506101b9565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101888261015d565b9050919050565b6101988161017d565b82525050565b60006020820190506101b3600083018461018f565b92915050565b610b31806101c86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100ed578063a71bbebe1461010b578063f2fde38b14610127578063faac26371461014357610088565b806316fed3e21461008d578063485cc955146100ab578063715018a6146100c7578063721f8480146100d1575b600080fd5b610095610161565b6040516100a29190610762565b60405180910390f35b6100c560048036038101906100c091906107ae565b610187565b005b6100cf610215565b005b6100eb60048036038101906100e69190610824565b610229565b005b6100f56102e7565b6040516101029190610762565b60405180910390f35b6101256004803603810190610120919061088d565b610310565b005b610141600480360381019061013c91906108ba565b610522565b005b61014b6105a8565b6040516101589190610946565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61018f6105ce565b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b61021d6105ce565b6102276000610655565b565b6102316105ce565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016102b293929190610970565b600060405180830381600087803b1580156102cc57600080fd5b505af11580156102e0573d6000803e3d6000fd5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060018060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610380573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103a491906109bc565b6103ae9190610a18565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166312ea50248360056040518363ffffffff1660e01b815260040161040e929190610ad2565b600060405180830381600087803b15801561042857600080fd5b505af115801561043c573d6000803e3d6000fd5b5050505060005b600a81101561051d576000818361045a9190610a18565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd30600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016104dd93929190610970565b600060405180830381600087803b1580156104f757600080fd5b505af115801561050b573d6000803e3d6000fd5b50505050508080600101915050610443565b505050565b61052a6105ce565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361059c5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016105939190610762565b60405180910390fd5b6105a581610655565b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105d6610719565b73ffffffffffffffffffffffffffffffffffffffff166105f46102e7565b73ffffffffffffffffffffffffffffffffffffffff161461065357610617610719565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161064a9190610762565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074c82610721565b9050919050565b61075c81610741565b82525050565b60006020820190506107776000830184610753565b92915050565b600080fd5b61078b81610741565b811461079657600080fd5b50565b6000813590506107a881610782565b92915050565b600080604083850312156107c5576107c461077d565b5b60006107d385828601610799565b92505060206107e485828601610799565b9150509250929050565b6000819050919050565b610801816107ee565b811461080c57600080fd5b50565b60008135905061081e816107f8565b92915050565b60006020828403121561083a5761083961077d565b5b60006108488482850161080f565b91505092915050565b600063ffffffff82169050919050565b61086a81610851565b811461087557600080fd5b50565b60008135905061088781610861565b92915050565b6000602082840312156108a3576108a261077d565b5b60006108b184828501610878565b91505092915050565b6000602082840312156108d0576108cf61077d565b5b60006108de84828501610799565b91505092915050565b6000819050919050565b600061090c61090761090284610721565b6108e7565b610721565b9050919050565b600061091e826108f1565b9050919050565b600061093082610913565b9050919050565b61094081610925565b82525050565b600060208201905061095b6000830184610937565b92915050565b61096a816107ee565b82525050565b60006060820190506109856000830186610753565b6109926020830185610753565b61099f6040830184610961565b949350505050565b6000815190506109b6816107f8565b92915050565b6000602082840312156109d2576109d161077d565b5b60006109e0848285016109a7565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a23826107ee565b9150610a2e836107ee565b9250828201905080821115610a4657610a456109e9565b5b92915050565b610a5581610851565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60068110610a9b57610a9a610a5b565b5b50565b6000819050610aac82610a8a565b919050565b6000610abc82610a9e565b9050919050565b610acc81610ab1565b82525050565b6000604082019050610ae76000830185610a4c565b610af46020830184610ac3565b939250505056fea2646970667358221220ff1945eebc59793d9dae1f77c5858bf88daa5b8b8dd29237f8e4ff6120522ca664736f6c63430008180033";

type PuppetMinterFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PuppetMinterFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PuppetMinterFactory__factory extends ContractFactory {
  constructor(...args: PuppetMinterFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _nftContract: AddressLike,
    _receiverAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _nftContract,
      _receiverAddress,
      overrides || {}
    );
  }
  override deploy(
    _nftContract: AddressLike,
    _receiverAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _nftContract,
      _receiverAddress,
      overrides || {}
    ) as Promise<
      PuppetMinterFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): PuppetMinterFactory__factory {
    return super.connect(runner) as PuppetMinterFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PuppetMinterFactoryInterface {
    return new Interface(_abi) as PuppetMinterFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PuppetMinterFactory {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as PuppetMinterFactory;
  }
}
