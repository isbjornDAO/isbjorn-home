/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  PuppetDropper,
  PuppetDropperInterface,
} from "../../../contracts/PostPuppetMint/PuppetDropper";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "airDropSingle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
    ],
    name: "airDropTwoForOne",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTokenId",
        type: "uint256",
      },
      {
        internalType: "address[]",
        name: "presaleAddresses",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "preSaleNumToDrop",
        type: "uint256[]",
      },
    ],
    name: "executeAirdrop",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "puppets",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405273c1a5507194a1e70c35678f53c48c3934abbcc1406000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50610959806100746000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c8063604ae6c314610051578063daaf37961461006d578063f2ddddb614610089578063faac2637146100a5575b600080fd5b61006b60048036038101906100669190610547565b6100c3565b005b6100876004803603810190610082919061063a565b61022a565b005b6100a3600480360381019061009e919061067a565b6102bd565b005b6100ad610428565b6040516100ba9190610706565b60405180910390f35b81819050848490501461010b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101029061077e565b60405180910390fd5b600085905060005b858590508110156102215760005b8484838181106101345761013361079e565b5b905060200201358110156102135760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e338989868181106101925761019161079e565b5b90506020020160208101906101a791906107cd565b866040518463ffffffff1660e01b81526004016101c693929190610818565b600060405180830381600087803b1580156101e057600080fd5b505af11580156101f4573d6000803e3d6000fd5b5050505082806102039061087e565b9350508080600101915050610121565b508080600101915050610113565b50505050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3384846040518463ffffffff1660e01b815260040161028793929190610818565b600060405180830381600087803b1580156102a157600080fd5b505af11580156102b5573d6000803e3d6000fd5b505050505050565b6000819050600061015f90505b61020581116104235760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b815260040161032f91906108c6565b602060405180830381865afa15801561034c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061037091906108f6565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342842e0e3383866040518463ffffffff1660e01b81526004016103cf93929190610818565b600060405180830381600087803b1580156103e957600080fd5b505af11580156103fd573d6000803e3d6000fd5b50505050828061040c9061087e565b93505050808061041b9061087e565b9150506102ca565b505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080fd5b600080fd5b6000819050919050565b61046981610456565b811461047457600080fd5b50565b60008135905061048681610460565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f8401126104b1576104b061048c565b5b8235905067ffffffffffffffff8111156104ce576104cd610491565b5b6020830191508360208202830111156104ea576104e9610496565b5b9250929050565b60008083601f8401126105075761050661048c565b5b8235905067ffffffffffffffff81111561052457610523610491565b5b6020830191508360208202830111156105405761053f610496565b5b9250929050565b6000806000806000606086880312156105635761056261044c565b5b600061057188828901610477565b955050602086013567ffffffffffffffff81111561059257610591610451565b5b61059e8882890161049b565b9450945050604086013567ffffffffffffffff8111156105c1576105c0610451565b5b6105cd888289016104f1565b92509250509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610607826105dc565b9050919050565b610617816105fc565b811461062257600080fd5b50565b6000813590506106348161060e565b92915050565b600080604083850312156106515761065061044c565b5b600061065f85828601610625565b925050602061067085828601610477565b9150509250929050565b6000602082840312156106905761068f61044c565b5b600061069e84828501610477565b91505092915050565b6000819050919050565b60006106cc6106c76106c2846105dc565b6106a7565b6105dc565b9050919050565b60006106de826106b1565b9050919050565b60006106f0826106d3565b9050919050565b610700816106e5565b82525050565b600060208201905061071b60008301846106f7565b92915050565b600082825260208201905092915050565b7f696e7075742073697a65206d69736d6174636800000000000000000000000000600082015250565b6000610768601383610721565b915061077382610732565b602082019050919050565b600060208201905081810360008301526107978161075b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156107e3576107e261044c565b5b60006107f184828501610625565b91505092915050565b610803816105fc565b82525050565b61081281610456565b82525050565b600060608201905061082d60008301866107fa565b61083a60208301856107fa565b6108476040830184610809565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061088982610456565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036108bb576108ba61084f565b5b600182019050919050565b60006020820190506108db6000830184610809565b92915050565b6000815190506108f08161060e565b92915050565b60006020828403121561090c5761090b61044c565b5b600061091a848285016108e1565b9150509291505056fea2646970667358221220de49941e9654e4cadf09153ad3bb1ef1cbb2f8ed9535676ce232f31e3541b12164736f6c63430008180033";

type PuppetDropperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PuppetDropperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PuppetDropper__factory extends ContractFactory {
  constructor(...args: PuppetDropperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      PuppetDropper & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): PuppetDropper__factory {
    return super.connect(runner) as PuppetDropper__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PuppetDropperInterface {
    return new Interface(_abi) as PuppetDropperInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): PuppetDropper {
    return new Contract(address, _abi, runner) as unknown as PuppetDropper;
  }
}
