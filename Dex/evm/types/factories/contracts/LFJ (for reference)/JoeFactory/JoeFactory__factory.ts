/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  JoeFactory,
  JoeFactoryInterface,
} from "../../../../contracts/LFJ (for reference)/JoeFactory/JoeFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "pair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "PairCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "allPairs",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "allPairsLength",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
    ],
    name: "createPair",
    outputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeTo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeToSetter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "getPair",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pairCodeHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeTo",
        type: "address",
      },
    ],
    name: "setFeeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeToSetter",
        type: "address",
      },
    ],
    name: "setFeeToSetter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_migrator",
        type: "address",
      },
    ],
    name: "setMigrator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051612b0e380380612b0e8339818101604052602081101561003357600080fd5b5051600180546001600160a01b0319166001600160a01b03909216919091179055612aab806100636000396000f3fe608060405234801561001057600080fd5b50600436106100995760003560e01c8063017e7e581461009e578063094b7415146100c25780631e3dd18b146100ca57806323cf3118146100e7578063574f2ba31461010f5780637cd07e47146101295780639aab924814610131578063a2e74af614610139578063c9c653961461015f578063e6a439051461018d578063f46901ed146101bb575b600080fd5b6100a66101e1565b604080516001600160a01b039092168252519081900360200190f35b6100a66101f0565b6100a6600480360360208110156100e057600080fd5b50356101ff565b61010d600480360360208110156100fd57600080fd5b50356001600160a01b0316610226565b005b610117610298565b60408051918252519081900360200190f35b6100a661029e565b6101176102ad565b61010d6004803603602081101561014f57600080fd5b50356001600160a01b03166102df565b6100a66004803603604081101561017557600080fd5b506001600160a01b0381358116916020013516610351565b6100a6600480360360408110156101a357600080fd5b506001600160a01b0381358116916020013516610665565b61010d600480360360208110156101d157600080fd5b50356001600160a01b031661068b565b6000546001600160a01b031681565b6001546001600160a01b031681565b6004818154811061020c57fe5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b03163314610276576040805162461bcd60e51b815260206004820152600e60248201526d2537b29d102327a92124a22222a760911b604482015290519081900360640190fd5b600280546001600160a01b0319166001600160a01b0392909216919091179055565b60045490565b6002546001600160a01b031681565b6000604051806020016102bf906106fd565b6020820181038252601f19601f8201166040525080519060200120905090565b6001546001600160a01b0316331461032f576040805162461bcd60e51b815260206004820152600e60248201526d2537b29d102327a92124a22222a760911b604482015290519081900360640190fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156103b5576040805162461bcd60e51b81526020600482015260186024820152774a6f653a204944454e544943414c5f41444452455353455360401b604482015290519081900360640190fd5b600080836001600160a01b0316856001600160a01b0316106103d85783856103db565b84845b90925090506001600160a01b03821661042f576040805162461bcd60e51b81526020600482015260116024820152704a6f653a205a45524f5f4144445245535360781b604482015290519081900360640190fd5b6001600160a01b0382811660009081526003602090815260408083208585168452909152902054161561049c576040805162461bcd60e51b815260206004820152601060248201526f4a6f653a20504149525f45584953545360801b604482015290519081900360640190fd5b6060604051806020016104ae906106fd565b6020820181038252601f19601f8201166040525090506000838360405160200180836001600160a01b031660601b8152601401826001600160a01b031660601b815260140192505050604051602081830303815290604052805190602001209050808251602084016000f59450846001600160a01b031663485cc95585856040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b0316815260200192505050600060405180830381600087803b15801561057b57600080fd5b505af115801561058f573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526003602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560048054600181018255958190527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b90950180549097168417909655925483519283529082015281517f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9929181900390910190a35050505092915050565b60036020908152600092835260408084209091529082529020546001600160a01b031681565b6001546001600160a01b031633146106db576040805162461bcd60e51b815260206004820152600e60248201526d2537b29d102327a92124a22222a760911b604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61236b8061070b8339019056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600c81526b2537b2902628102a37b5b2b760a11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd4eb8415c62493390808cc42ba6f3ba97fa30eb773771605674d83c7162115e7818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556122618061010a6000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101da5780630902f1ac14610257578063095ea7b31461028f5780630dfe1681146102cf57806318160ddd146102f357806323b872dd1461030d57806330adf81f14610343578063313ce5671461034b5780633644e51514610369578063485cc955146103715780635909c0d51461039f5780635a3d5493146103a75780636a627842146103af57806370a08231146103d55780637464fc3d146103fb5780637ecebe001461040357806389afcb441461042957806395d89b4114610468578063a9059cbb14610470578063ba9a7a561461049c578063bc25cf77146104a4578063c45a0155146104ca578063d21220a7146104d2578063d505accf146104da578063dd62ed3e1461052b578063fff6cae914610559575b600080fd5b6101d86004803603608081101561016457600080fd5b8135916020810135916001600160a01b036040830135169190810190608081016060820135600160201b81111561019a57600080fd5b8201836020820111156101ac57600080fd5b803590602001918460018302840111600160201b831117156101cd57600080fd5b509092509050610561565b005b6101e2610a97565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021c578181015183820152602001610204565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61025f610abf565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6102bb600480360360408110156102a557600080fd5b506001600160a01b038135169060200135610ae9565b604080519115158252519081900360200190f35b6102d7610b00565b604080516001600160a01b039092168252519081900360200190f35b6102fb610b0f565b60408051918252519081900360200190f35b6102bb6004803603606081101561032357600080fd5b506001600160a01b03813581169160208101359091169060400135610b15565b6102fb610ba9565b610353610bbb565b6040805160ff9092168252519081900360200190f35b6102fb610bc0565b6101d86004803603604081101561038757600080fd5b506001600160a01b0381358116916020013516610bc6565b6102fb610c44565b6102fb610c4a565b6102fb600480360360208110156103c557600080fd5b50356001600160a01b0316610c50565b6102fb600480360360208110156103eb57600080fd5b50356001600160a01b03166110c6565b6102fb6110d8565b6102fb6004803603602081101561041957600080fd5b50356001600160a01b03166110de565b61044f6004803603602081101561043f57600080fd5b50356001600160a01b03166110f0565b6040805192835260208301919091528051918290030190f35b6101e261147e565b6102bb6004803603604081101561048657600080fd5b506001600160a01b03813516906020013561149d565b6102fb6114aa565b6101d8600480360360208110156104ba57600080fd5b50356001600160a01b03166114b0565b6102d761161c565b6102d761162b565b6101d8600480360360e08110156104f057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561163a565b6102fb6004803603604081101561054157600080fd5b506001600160a01b038135811691602001351661181d565b6101d861183a565b600c546001146105a6576040805162461bcd60e51b815260206004820152600b60248201526a129bd94e881313d0d2d15160aa1b604482015290519081900360640190fd5b6000600c55841515806105b95750600084115b61060a576040805162461bcd60e51b815260206004820152601f60248201527f4a6f653a20494e53554646494349454e545f4f55545055545f414d4f554e5400604482015290519081900360640190fd5b600080610615610abf565b5091509150816001600160701b03168710801561063a5750806001600160701b031686105b610689576040805162461bcd60e51b815260206004820152601b60248201527a4a6f653a20494e53554646494349454e545f4c495155494449545960281b604482015290519081900360640190fd5b60065460075460009182916001600160a01b039182169190811690891682148015906106c75750806001600160a01b0316896001600160a01b031614155b61070a576040805162461bcd60e51b815260206004820152600f60248201526e4a6f653a20494e56414c49445f544f60881b604482015290519081900360640190fd5b8a1561071b5761071b828a8d611996565b891561072c5761072c818a8c611996565b86156107de57886001600160a01b031663ee22dd87338d8d8c8c6040518663ffffffff1660e01b815260040180866001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b1580156107c557600080fd5b505af11580156107d9573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561082457600080fd5b505afa158015610838573d6000803e3d6000fd5b505050506040513d602081101561084e57600080fd5b5051604080516370a0823160e01b815230600482015290519195506001600160a01b038316916370a0823191602480820192602092909190829003018186803b15801561089a57600080fd5b505afa1580156108ae573d6000803e3d6000fd5b505050506040513d60208110156108c457600080fd5b5051925060009150506001600160701b0385168a900383116108e75760006108f6565b89856001600160701b03160383035b9050600089856001600160701b0316038311610913576000610922565b89856001600160701b03160383035b905060008211806109335750600081115b610984576040805162461bcd60e51b815260206004820152601e60248201527f4a6f653a20494e53554646494349454e545f494e5055545f414d4f554e540000604482015290519081900360640190fd5b60006109a6610994846003611b23565b6109a0876103e8611b23565b90611b86565b905060006109b8610994846003611b23565b90506109dd620f42406109d76001600160701b038b8116908b16611b23565b90611b23565b6109e78383611b23565b1015610a23576040805162461bcd60e51b81526020600482015260066024820152654a6f653a204b60d01b604482015290519081900360640190fd5b5050610a3184848888611bd6565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600c55505050505050505050565b6040518060400160405280600c81526020016b2537b2902628102a37b5b2b760a11b81525081565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610af6338484611d81565b5060015b92915050565b6006546001600160a01b031681565b60005481565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610b94576001600160a01b0384166000908152600260209081526040808320338452909152902054610b6f9083611b86565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610b9f848484611de3565b5060019392505050565b6000805160206121ea83398151915281565b601281565b60035481565b6005546001600160a01b03163314610c16576040805162461bcd60e51b815260206004820152600e60248201526d2537b29d102327a92124a22222a760911b604482015290519081900360640190fd5b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b60095481565b600a5481565b6000600c54600114610c97576040805162461bcd60e51b815260206004820152600b60248201526a129bd94e881313d0d2d15160aa1b604482015290519081900360640190fd5b6000600c81905580610ca7610abf565b50600654604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610cfb57600080fd5b505afa158015610d0f573d6000803e3d6000fd5b505050506040513d6020811015610d2557600080fd5b5051600754604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610d7857600080fd5b505afa158015610d8c573d6000803e3d6000fd5b505050506040513d6020811015610da257600080fd5b505190506000610dbb836001600160701b038716611b86565b90506000610dd2836001600160701b038716611b86565b90506000610de08787611e7f565b60005490915080610fb75760055460408051637cd07e4760e01b815290516000926001600160a01b031691637cd07e47916004808301926020929190829003018186803b158015610e3057600080fd5b505afa158015610e44573d6000803e3d6000fd5b505050506040513d6020811015610e5a57600080fd5b50519050336001600160a01b0382161415610f3557806001600160a01b03166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b158015610ea857600080fd5b505afa158015610ebc573d6000803e3d6000fd5b505050506040513d6020811015610ed257600080fd5b505199508915801590610ee757506000198a14155b610f30576040805162461bcd60e51b81526020600482015260156024820152744261642064657369726564206c697175696469747960581b604482015290519081900360640190fd5b610fb1565b6001600160a01b03811615610f8a576040805162461bcd60e51b815260206004820152601660248201527526bab9ba103737ba103430bb329036b4b3b930ba37b960511b604482015290519081900360640190fd5b610fa26103e86109a0610f9d8888611b23565b611fbf565b9950610fb160006103e8612011565b50610ffa565b610ff76001600160701b038916610fce8684611b23565b81610fd557fe5b046001600160701b038916610fea8685611b23565b81610ff157fe5b04612089565b98505b600089116110395760405162461bcd60e51b815260040180806020018281038252602281526020018061220a6022913960400191505060405180910390fd5b6110438a8a612011565b61104f86868a8a611bd6565b811561107957600854611075906001600160701b0380821691600160701b900416611b23565b600b555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600c5550949695505050505050565b60016020526000908152604090205481565b600b5481565b60046020526000908152604090205481565b600080600c54600114611138576040805162461bcd60e51b815260206004820152600b60248201526a129bd94e881313d0d2d15160aa1b604482015290519081900360640190fd5b6000600c81905580611148610abf565b50600654600754604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b1580156111a457600080fd5b505afa1580156111b8573d6000803e3d6000fd5b505050506040513d60208110156111ce57600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561121c57600080fd5b505afa158015611230573d6000803e3d6000fd5b505050506040513d602081101561124657600080fd5b5051306000908152600160205260408120549192506112658888611e7f565b600054909150806112768487611b23565b8161127d57fe5b049a508061128b8486611b23565b8161129257fe5b04995060008b1180156112a5575060008a115b6112e05760405162461bcd60e51b81526004018080602001828103825260228152602001806121a86022913960400191505060405180910390fd5b6112ea30846120a1565b6112f5878d8d611996565b611300868d8c611996565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561134657600080fd5b505afa15801561135a573d6000803e3d6000fd5b505050506040513d602081101561137057600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b1580156113bc57600080fd5b505afa1580156113d0573d6000803e3d6000fd5b505050506040513d60208110156113e657600080fd5b505193506113f685858b8b611bd6565b81156114205760085461141c906001600160701b0380821691600160701b900416611b23565b600b555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600c81905550915091565b6040518060400160405280600381526020016204a4c560ec1b81525081565b6000610af6338484611de3565b6103e881565b600c546001146114f5576040805162461bcd60e51b815260206004820152600b60248201526a129bd94e881313d0d2d15160aa1b604482015290519081900360640190fd5b6000600c55600654600754600854604080516370a0823160e01b815230600482015290516001600160a01b03948516949093169261159e9285928792611599926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561156757600080fd5b505afa15801561157b573d6000803e3d6000fd5b505050506040513d602081101561159157600080fd5b505190611b86565b611996565b61161281846115996008600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561156757600080fd5b50506001600c5550565b6005546001600160a01b031681565b6007546001600160a01b031681565b4284101561167e576040805162461bcd60e51b815260206004820152600c60248201526b129bd94e881156141254915160a21b604482015290519081900360640190fd5b6003546001600160a01b0380891660008181526004602090815260408083208054600180820190925582516000805160206121ea8339815191528186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015611787573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906117bd5750886001600160a01b0316816001600160a01b0316145b611807576040805162461bcd60e51b81526020600482015260166024820152754a6f653a20494e56414c49445f5349474e415455524560501b604482015290519081900360640190fd5b611812898989611d81565b505050505050505050565b600260209081526000928352604080842090915290825290205481565b600c5460011461187f576040805162461bcd60e51b815260206004820152600b60248201526a129bd94e881313d0d2d15160aa1b604482015290519081900360640190fd5b6000600c55600654604080516370a0823160e01b8152306004820152905161198f926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156118d057600080fd5b505afa1580156118e4573d6000803e3d6000fd5b505050506040513d60208110156118fa57600080fd5b5051600754604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b15801561194757600080fd5b505afa15801561195b573d6000803e3d6000fd5b505050506040513d602081101561197157600080fd5b50516008546001600160701b0380821691600160701b900416611bd6565b6001600c55565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b60208310611a3f5780518252601f199092019160209182019101611a20565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611aa1576040519150601f19603f3d011682016040523d82523d6000602084013e611aa6565b606091505b5091509150818015611ad4575080511580611ad45750808060200190516020811015611ad157600080fd5b50515b611b1c576040805162461bcd60e51b8152602060048201526014602482015273129bd94e881514905394d1915497d1905253115160621b604482015290519081900360640190fd5b5050505050565b6000811580611b3e57505080820282828281611b3b57fe5b04145b610afa576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610afa576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611bf457506001600160701b038311155b611c35576040805162461bcd60e51b815260206004820152600d60248201526c4a6f653a204f564552464c4f5760981b604482015290519081900360640190fd5b60085463ffffffff42811691600160e01b90048116820390811615801590611c6557506001600160701b03841615155b8015611c7957506001600160701b03831615155b15611ce4578063ffffffff16611ca185611c9286612121565b6001600160e01b031690612133565b600980546001600160e01b03929092169290920201905563ffffffff8116611ccc84611c9287612121565b600a80546001600160e01b0392909216929092020190555b600880546001600160701b0319166001600160701b0388811691909117600160701b600160e01b031916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260016020526040902054611e069082611b86565b6001600160a01b038085166000908152600160205260408082209390935590841681522054611e359082612158565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716926000805160206121ca83398151915292918290030190a3505050565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611ed057600080fd5b505afa158015611ee4573d6000803e3d6000fd5b505050506040513d6020811015611efa57600080fd5b5051600b546001600160a01b038216158015945091925090611fab578015611fa6576000611f37610f9d6001600160701b03888116908816611b23565b90506000611f4483611fbf565b905080821115611fa3576000611f66611f5d8484611b86565b60005490611b23565b90506000611f7f83611f79866005611b23565b90612158565b90506000818381611f8c57fe5b0490508015611f9f57611f9f8782612011565b5050505b50505b611fb7565b8015611fb7576000600b555b505092915050565b60006003821115612002575080600160028204015b81811015611ffc57809150600281828581611feb57fe5b040181611ff457fe5b049050611fd4565b5061200c565b811561200c575060015b919050565b60005461201e9082612158565b60009081556001600160a01b0383168152600160205260409020546120439082612158565b6001600160a01b03831660008181526001602090815260408083209490945583518581529351929391926000805160206121ca8339815191529281900390910190a35050565b6000818310612098578161209a565b825b9392505050565b6001600160a01b0382166000908152600160205260409020546120c49082611b86565b6001600160a01b038316600090815260016020526040812091909155546120eb9082611b86565b60009081556040805183815290516001600160a01b038516916000805160206121ca833981519152919081900360200190a35050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b0384168161215057fe5b049392505050565b80820182811015610afa576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe4a6f653a20494e53554646494349454e545f4c49515549444954595f4255524e4544ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c94a6f653a20494e53554646494349454e545f4c49515549444954595f4d494e544544a264697066735822122056abb975d41fca2f0e9f161b6e695602480f28fbe7fafc344a7d23c0680976d564736f6c634300060c0033a26469706673582212209a6c496f89d6cf36c3d5260e49e7d4c204a65ff7fedb13a1c87a5882f8b8f96a64736f6c634300060c0033";

type JoeFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: JoeFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class JoeFactory__factory extends ContractFactory {
  constructor(...args: JoeFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_feeToSetter, overrides || {});
  }
  override deploy(
    _feeToSetter: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_feeToSetter, overrides || {}) as Promise<
      JoeFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): JoeFactory__factory {
    return super.connect(runner) as JoeFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): JoeFactoryInterface {
    return new Interface(_abi) as JoeFactoryInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): JoeFactory {
    return new Contract(address, _abi, runner) as unknown as JoeFactory;
  }
}
