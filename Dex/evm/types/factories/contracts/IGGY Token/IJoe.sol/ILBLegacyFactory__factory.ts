/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILBLegacyFactory,
  ILBLegacyFactoryInterface,
} from "../../../../contracts/IGGY Token/IJoe.sol/ILBLegacyFactory";

const _abi = [
  {
    inputs: [],
    name: "PendingOwnable__AddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NoPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NotPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__PendingOwnerAlreadySet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bool",
        name: "unlocked",
        type: "bool",
      },
    ],
    name: "FactoryLockedStatusUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filterPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decayPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reductionFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "variableFeeControl",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVolatilityAccumulator",
        type: "uint256",
      },
    ],
    name: "FeeParametersSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldRecipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "FeeRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "oldFlashLoanFee",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newFlashLoanFee",
        type: "uint256",
      },
    ],
    name: "FlashLoanFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "pid",
        type: "uint256",
      },
    ],
    name: "LBPairCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "ignored",
        type: "bool",
      },
    ],
    name: "LBPairIgnoredStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldLBPairImplementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "LBPairImplementation",
        type: "address",
      },
    ],
    name: "LBPairImplementationSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "PendingOwnerSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
    ],
    name: "PresetRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "baseFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "filterPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decayPeriod",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reductionFactor",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "variableFeeControl",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "maxVolatilityAccumulator",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sampleLifetime",
        type: "uint256",
      },
    ],
    name: "PresetSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
    ],
    name: "QuoteAssetAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
    ],
    name: "QuoteAssetRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "LBPairImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BIN_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_FEE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_PROTOCOL_SHARE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BIN_STEP",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
    ],
    name: "addQuoteAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "allLBPairs",
    outputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "becomeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "activeId",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
    ],
    name: "createLBPair",
    outputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "creationUnlocked",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "flashLoanFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
    ],
    name: "forceDecay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllBinSteps",
    outputs: [
      {
        internalType: "uint256[]",
        name: "presetsBinStep",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
    ],
    name: "getAllLBPairs",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "binStep",
            type: "uint16",
          },
          {
            internalType: "contract ILBLegacyPair",
            name: "LBPair",
            type: "address",
          },
          {
            internalType: "bool",
            name: "createdByOwner",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ignoredForRouting",
            type: "bool",
          },
        ],
        internalType: "struct ILBLegacyFactory.LBPairInformation[]",
        name: "LBPairsBinStep",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
    ],
    name: "getLBPairInformation",
    outputs: [
      {
        components: [
          {
            internalType: "uint16",
            name: "binStep",
            type: "uint16",
          },
          {
            internalType: "contract ILBLegacyPair",
            name: "LBPair",
            type: "address",
          },
          {
            internalType: "bool",
            name: "createdByOwner",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "ignoredForRouting",
            type: "bool",
          },
        ],
        internalType: "struct ILBLegacyFactory.LBPairInformation",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfLBPairs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNumberOfQuoteAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
    ],
    name: "getPreset",
    outputs: [
      {
        internalType: "uint256",
        name: "baseFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "filterPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "decayPeriod",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "reductionFactor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "variableFeeControl",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "protocolShare",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "maxAccumulator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "sampleLifetime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getQuoteAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    name: "isQuoteAsset",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
    ],
    name: "removePreset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "quoteAsset",
        type: "address",
      },
    ],
    name: "removeQuoteAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokePendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "locked",
        type: "bool",
      },
    ],
    name: "setFactoryLockedState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeRecipient",
        type: "address",
      },
    ],
    name: "setFeeRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "baseFactor",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "filterPeriod",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "decayPeriod",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "reductionFactor",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "variableFeeControl",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "protocolShare",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "maxVolatilityAccumulator",
        type: "uint24",
      },
    ],
    name: "setFeesParametersOnPair",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "flashLoanFee",
        type: "uint256",
      },
    ],
    name: "setFlashLoanFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "binStep",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "ignored",
        type: "bool",
      },
    ],
    name: "setLBPairIgnored",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "LBPairImplementation",
        type: "address",
      },
    ],
    name: "setLBPairImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "setPendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "baseFactor",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "filterPeriod",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "decayPeriod",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "reductionFactor",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "variableFeeControl",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "protocolShare",
        type: "uint16",
      },
      {
        internalType: "uint24",
        name: "maxVolatilityAccumulator",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "sampleLifetime",
        type: "uint16",
      },
    ],
    name: "setPreset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ILBLegacyFactory__factory {
  static readonly abi = _abi;
  static createInterface(): ILBLegacyFactoryInterface {
    return new Interface(_abi) as ILBLegacyFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILBLegacyFactory {
    return new Contract(address, _abi, runner) as unknown as ILBLegacyFactory;
  }
}
