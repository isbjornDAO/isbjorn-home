/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IPendingOwnable,
  IPendingOwnableInterface,
} from "../../../../contracts/IGGY Token/IJoe.sol/IPendingOwnable";

const _abi = [
  {
    inputs: [],
    name: "PendingOwnable__AddressZero",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NoPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NotOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__NotPendingOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PendingOwnable__PendingOwnerAlreadySet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "PendingOwnerSet",
    type: "event",
  },
  {
    inputs: [],
    name: "becomeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokePendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pendingOwner",
        type: "address",
      },
    ],
    name: "setPendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IPendingOwnable__factory {
  static readonly abi = _abi;
  static createInterface(): IPendingOwnableInterface {
    return new Interface(_abi) as IPendingOwnableInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IPendingOwnable {
    return new Contract(address, _abi, runner) as unknown as IPendingOwnable;
  }
}
