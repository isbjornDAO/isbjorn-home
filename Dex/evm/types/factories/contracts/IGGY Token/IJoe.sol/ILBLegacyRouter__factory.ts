/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ILBLegacyRouter,
  ILBLegacyRouterInterface,
} from "../../../../contracts/IGGY Token/IJoe.sol/ILBLegacyRouter";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "binStep",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountXMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountYMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeIdDesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idSlippage",
            type: "uint256",
          },
          {
            internalType: "int256[]",
            name: "deltaIds",
            type: "int256[]",
          },
          {
            internalType: "uint256[]",
            name: "distributionX",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "distributionY",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ILBLegacyRouter.LiquidityParameters",
        name: "liquidityParameters",
        type: "tuple",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        internalType: "uint256[]",
        name: "depositIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "liquidityMinted",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "tokenX",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "tokenY",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "binStep",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountX",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountY",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountXMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountYMin",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "activeIdDesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "idSlippage",
            type: "uint256",
          },
          {
            internalType: "int256[]",
            name: "deltaIds",
            type: "int256[]",
          },
          {
            internalType: "uint256[]",
            name: "distributionX",
            type: "uint256[]",
          },
          {
            internalType: "uint256[]",
            name: "distributionY",
            type: "uint256[]",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
        ],
        internalType: "struct ILBLegacyRouter.LiquidityParameters",
        name: "liquidityParameters",
        type: "tuple",
      },
    ],
    name: "addLiquidityAVAX",
    outputs: [
      {
        internalType: "uint256[]",
        name: "depositIds",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "liquidityMinted",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "activeId",
        type: "uint24",
      },
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
    ],
    name: "createLBPair",
    outputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "getIdFromPrice",
    outputs: [
      {
        internalType: "uint24",
        name: "",
        type: "uint24",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "LBPair",
        type: "address",
      },
      {
        internalType: "uint24",
        name: "id",
        type: "uint24",
      },
    ],
    name: "getPriceFromId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "lbPair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "swapForY",
        type: "bool",
      },
    ],
    name: "getSwapIn",
    outputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feesIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBLegacyPair",
        name: "lbPair",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "swapForY",
        type: "bool",
      },
    ],
    name: "getSwapOut",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "feesIn",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oldFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "tokenX",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "tokenY",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amountXMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountYMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "amountX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountY",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint16",
        name: "binStep",
        type: "uint16",
      },
      {
        internalType: "uint256",
        name: "amountTokenMin",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAVAXMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityAVAX",
    outputs: [
      {
        internalType: "uint256",
        name: "amountToken",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountAVAX",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapAVAXForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactAVAXForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactAVAXForTokensSupportingFeeOnTransferTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinAVAX",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForAVAX",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMinAVAX",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForAVAXSupportingFeeOnTransferTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address payable",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactAVAX",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountInMax",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "pairBinSteps",
        type: "uint256[]",
      },
      {
        internalType: "contract IERC20[]",
        name: "tokenPath",
        type: "address[]",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        internalType: "uint256[]",
        name: "amountsIn",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sweep",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILBToken",
        name: "_lbToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "_ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "_amounts",
        type: "uint256[]",
      },
    ],
    name: "sweepLBToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wavax",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ILBLegacyRouter__factory {
  static readonly abi = _abi;
  static createInterface(): ILBLegacyRouterInterface {
    return new Interface(_abi) as ILBLegacyRouterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ILBLegacyRouter {
    return new Contract(address, _abi, runner) as unknown as ILBLegacyRouter;
  }
}
