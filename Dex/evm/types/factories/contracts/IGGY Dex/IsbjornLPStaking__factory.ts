/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  IsbjornLPStaking,
  IsbjornLPStakingInterface,
} from "../../../contracts/IGGY Dex/IsbjornLPStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "EpochCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rates",
        type: "uint256[]",
      },
    ],
    name: "RewardsConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "EPOCH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    name: "configureEpochRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "createEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "createStakingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createdEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "epochs",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStakableTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isStakingToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingPools",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakingTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405262278d0060805234801561001757600080fd5b50600160005533806100445760405162461bcd60e51b815260040161003b9061009d565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600160075560006008556100d4565b60208082526016908201527f4f776e61626c653a20496e76616c6964206f776e657200000000000000000000604082015260600190565b608051611f3d6100f360003980610ae052806113925250611f3d6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c8063ad935e97116100b8578063c6b61e4c1161007c578063c6b61e4c14610275578063ebbf95e114610297578063ef5cfb8c146102ac578063f2fde38b146102bf578063f3fef3a3146102d2578063f6554b86146102e557610142565b8063ad935e9714610213578063adc9772e14610234578063b42652e914610247578063b97dd9e21461025a578063be111af41461026257610142565b80634ec594ff1161010a5780634ec594ff146101cd57806365f249a9146101e057806376671808146101e85780638da5cb5b146101f05780639be65a60146101f8578063a70b9f0c1461020b57610142565b80630f208beb146101475780632b96895814610170578063344e5e341461017a57806336a8e0971461019a5780634a7b5072146101ba575b600080fd5b61015a610155366004611792565b6102f8565b6040516101679190611ed6565b60405180910390f35b610178610315565b005b61018d610188366004611855565b610387565b6040516101679190611919565b6101ad6101a8366004611777565b6103ae565b6040516101679190611a36565b61015a6101c83660046117c6565b6103c3565b6101786101db366004611885565b610553565b61015a6108ed565b61015a6108f3565b61018d6108f9565b610178610206366004611777565b610908565b61015a610ade565b610226610221366004611777565b610b02565b604051610167929190611edf565b61017861024236600461180b565b610b1e565b610178610255366004611777565b610cc8565b61015a610d03565b610178610270366004611777565b610d63565b610288610283366004611855565b610e98565b60405161016793929190611eef565b61029f610ebc565b60405161016791906119e9565b6101786102ba366004611777565b610f1e565b6101786102cd366004611777565b6110c8565b6101786102e036600461180b565b611164565b6101786102f3366004611855565b6112ef565b600460209081526000928352604080842090915290825290205481565b6001546001600160a01b031633146103485760405162461bcd60e51b815260040161033f90611cac565b60405180910390fd5b600180546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b6006818154811061039457fe5b6000918252602090912001546001600160a01b0316905081565b60056020526000908152604090205460ff1681565b6001600160a01b038084166000818152600460209081526040808320948716835293815283822092825260039052918220826103fd610d03565b905080158061040b57508154155b156104355750506001600160a01b038316600090815260029091016020526040902054905061054c565b6001600160a01b03808616600081815260028086016020908152604080842054878552838352818520968e16855295909201815281832093835292909252205480156104e0576001600160a01b03871660009081526003850160205260408120546104a19042906113fc565b905060006104af8383611425565b86549091506104db906104d4906104ce84670de0b6b3a7640000611425565b9061145c565b859061148e565b935050505b6001600160a01b03871660009081526001860160205260409020548554610544916105239161051d90670de0b6b3a7640000906104ce9088611425565b906113fc565b6001600160a01b03891660009081526002880160205260409020549061148e565b955050505050505b9392505050565b6001546001600160a01b0316331461057d5760405162461bcd60e51b815260040161033f90611cac565b60085486111561059f5760405162461bcd60e51b815260040161033f90611a70565b6001600160a01b03851660009081526003602052604090206001015460ff166105da5760405162461bcd60e51b815260040161033f90611ead565b60008681526002602052604090205442106106075760405162461bcd60e51b815260040161033f90611d7e565b8281146106265760405162461bcd60e51b815260040161033f90611ac8565b60008681526002602090815260408083206001600160a01b038916845260039092528220815460018301549293919261065e916113fc565b905060005b8681101561084c57600088888381811061067957fe5b905060200201602081019061068e9190611777565b90506001600160a01b0381166106b65760405162461bcd60e51b815260040161033f90611d22565b60008787848181106106c457fe5b90506020020135116106e85760405162461bcd60e51b815260040161033f90611c52565b806001600160a01b03166323b872dd33308a8a8781811061070557fe5b905060200201356040518463ffffffff1660e01b815260040161072a9392919061192d565b602060405180830381600087803b15801561074457600080fd5b505af1158015610758573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061077c9190611835565b6107985760405162461bcd60e51b815260040161033f90611dad565b60006107bf848989868181106107aa57fe5b9050602002013561145c90919063ffffffff16565b6001600160a01b03808d166000908152600289016020908152604080832093871683529281528282208490556003890190522054909150610842576004850180546001810182556000918252602080832090910180546001600160a01b0319166001600160a01b0386169081179091558854908352600388019091526040909120555b5050600101610663565b50600483015460ff1661089a5760038301805460018082018355600092835260209092200180546001600160a01b0319166001600160a01b038b1617905560048401805460ff191690911790555b876001600160a01b0316897f35a7c1319246cbc1fded4bd9d0cef6f625546a56b4826a250d3cf1bd00851c66898989896040516108da949392919061196a565b60405180910390a3505050505050505050565b60085481565b60075481565b6001546001600160a01b031681565b6001546001600160a01b031633146109325760405162461bcd60e51b815260040161033f90611cac565b6001600160a01b03811660009081526005602052604090205460ff161561096b5760405162461bcd60e51b815260040161033f90611e76565b4260015b60085481116109b05760008181526002602052604090206001015482116109a85760405162461bcd60e51b815260040161033f90611b26565b60010161096f565b506040516370a0823160e01b81526000906001600160a01b038416906370a08231906109e0903090600401611919565b60206040518083038186803b1580156109f857600080fd5b505afa158015610a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a30919061186d565b905060008111610a525760405162461bcd60e51b815260040161033f90611d50565b60015460405163a9059cbb60e01b81526001600160a01b038581169263a9059cbb92610a8692909116908590600401611951565b602060405180830381600087803b158015610aa057600080fd5b505af1158015610ab4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ad89190611835565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052600090815260409020805460019091015460ff1682565b60026000541415610b415760405162461bcd60e51b815260040161033f90611e12565b600260005580610b635760405162461bcd60e51b815260040161033f90611b97565b6001600160a01b03821660009081526003602052604090206001015460ff16610b9e5760405162461bcd60e51b815260040161033f90611ead565b610ba882336114b1565b6001600160a01b0382166000908152600360209081526040808320600483528184203385529092529091208154610bdf908461148e565b82558054610bed908461148e565b81556040516323b872dd60e01b81526001600160a01b038516906323b872dd90610c1f9033903090889060040161192d565b602060405180830381600087803b158015610c3957600080fd5b505af1158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c719190611835565b50836001600160a01b0316336001600160a01b03167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610cb59190611ed6565b60405180910390a3505060016000555050565b6001600160a01b0381166000908152600460209081526040808320338452909152902054610cf7908290611164565b610d0081610f1e565b50565b60075460009042905b6008548111610d59576000818152600260205260409020548210801590610d43575060008181526002602052604090206001015482105b15610d51579150610d609050565b600101610d0c565b5060009150505b90565b6001546001600160a01b03163314610d8d5760405162461bcd60e51b815260040161033f90611cac565b6001600160a01b038116610db35760405162461bcd60e51b815260040161033f90611af7565b6001600160a01b03811660009081526003602052604090206001015460ff1615610def5760405162461bcd60e51b815260040161033f90611a9b565b6001600160a01b03811660008181526003602090815260408083206001808201805460ff19908116831790915560059094528285208054909416811790935560068054938401815584527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f90920180546001600160a01b03191685179055519092917f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc91a25050565b60026020526000908152604090208054600182015460049092015490919060ff1683565b60606006805480602002602001604051908101604052809291908181526020018280548015610f1457602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610ef6575b5050505050905090565b60026000541415610f415760405162461bcd60e51b815260040161033f90611e12565b6002600055610f5081336114b1565b6001600160a01b038116600090815260036020908152604080832060048352818420338552909252822090915b60048301548110156110bd576000836004018281548110610f9a57fe5b60009182526020808320909101546001600160a01b03168083526002860190915260409091205490915080156110b3576001600160a01b0382166000818152600286016020526040808220919091555163a9059cbb60e01b815263a9059cbb9061100a9033908590600401611951565b602060405180830381600087803b15801561102457600080fd5b505af1158015611038573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105c9190611835565b50816001600160a01b0316866001600160a01b0316336001600160a01b03167fce405e67b4d6e56e438257e15f160ae28b450e6e7659bbc4c1f4e09a1ac846cb846040516110aa9190611ed6565b60405180910390a45b5050600101610f7d565b505060016000555050565b6001546001600160a01b031633146110f25760405162461bcd60e51b815260040161033f90611cac565b6001600160a01b0381166111185760405162461bcd60e51b815260040161033f90611de2565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600260005414156111875760405162461bcd60e51b815260040161033f90611e12565b6002600055806111a95760405162461bcd60e51b815260040161033f90611c81565b6001600160a01b0382166000908152600460209081526040808320338452909152902080548211156111ed5760405162461bcd60e51b815260040161033f90611bed565b6111f783336114b1565b6001600160a01b0383166000908152600360205260409020805461121b90846113fc565b8155815461122990846113fc565b825560405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb906112599033908790600401611951565b602060405180830381600087803b15801561127357600080fd5b505af1158015611287573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ab9190611835565b50836001600160a01b0316336001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb85604051610cb59190611ed6565b6001546001600160a01b031633146113195760405162461bcd60e51b815260040161033f90611cac565b4281116113385760405162461bcd60e51b815260040161033f90611c1b565b60085415611374576008546000908152600260205260409020600101548110156113745760405162461bcd60e51b815260040161033f90611cdb565b600880546001908101600081815260026020526040908190208581557f000000000000000000000000000000000000000000000000000000000000000086019381019390935592819055915182907f8ec3778c70816b98eca52742fc31690184a27bdbe390ba8b49b16ea22ff5320b906113ef908690611ed6565b60405180910390a2505050565b8082038281111561141f5760405162461bcd60e51b815260040161033f90611a41565b92915050565b60008115806114405750508082028282828161143d57fe5b04145b61141f5760405162461bcd60e51b815260040161033f90611b69565b600080821161147d5760405162461bcd60e51b815260040161033f90611e49565b81838161148657fe5b049392505050565b8082018281101561141f5760405162461bcd60e51b815260040161033f90611bbf565b6001600160a01b038216600090815260036020526040902080546114d55750611713565b60006114df610d03565b9050806114ed575050611713565b60005b600483015481101561170f57600083600401828154811061150d57fe5b6000918252602080832090910154858352600280835260408085206001600160a01b038c81168752920184528085209190921680855292529091205490915080611558575050611707565b6001600160a01b03821660009081526003860160205260408120544291906115819083906113fc565b905080156116095760006115958483611425565b88549091506000906115b3906104ce84670de0b6b3a7640000611425565b6001600160a01b038716600090815260028b0160205260409020549091506115db908261148e565b6001600160a01b038716600090815260028b01602090815260408083209390935560038c0190522084905550505b6001600160a01b03881615611702576001600160a01b03808a1660009081526004602090815260408083208c85168452825280832093881683526001840182528083205460028c019092528220548354611676929161051d91670de0b6b3a7640000916104ce9190611425565b6001600160a01b038716600090815260028401602052604090205490915061169e908261148e565b6001600160a01b038716600090815260028085016020908152604080842094909455908c019052205482546116e091670de0b6b3a7640000916104ce91611425565b6001600160a01b03871660009081526001909301602052604090922091909155505b505050505b6001016114f0565b5050505b5050565b80356001600160a01b038116811461141f57600080fd5b60008083601f84011261173f578182fd5b50813567ffffffffffffffff811115611756578182fd5b602083019150836020808302850101111561177057600080fd5b9250929050565b600060208284031215611788578081fd5b61054c8383611717565b600080604083850312156117a4578081fd5b6117ae8484611717565b91506117bd8460208501611717565b90509250929050565b6000806000606084860312156117da578081fd5b6117e48585611717565b92506117f38560208601611717565b91506118028560408601611717565b90509250925092565b6000806040838503121561181d578182fd5b6118278484611717565b946020939093013593505050565b600060208284031215611846578081fd5b8151801515811461054c578182fd5b600060208284031215611866578081fd5b5035919050565b60006020828403121561187e578081fd5b5051919050565b6000806000806000806080878903121561189d578182fd5b8635955060208701356001600160a01b03811681146118ba578283fd5b9450604087013567ffffffffffffffff808211156118d6578384fd5b6118e28a838b0161172e565b909650945060608901359150808211156118fa578384fd5b5061190789828a0161172e565b979a9699509497509295939492505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6040808252810184905260008560608301825b878110156119ad5760208381016001600160a01b0361199c8287611717565b16845293509091019060010161197d565b5083810360208501528481526001600160fb1b038511156119cc578283fd5b602085029150818660208301370160200190815295945050505050565b6020808252825182820181905260009190848201906040850190845b81811015611a2a5783516001600160a01b031683529284019291840191600101611a05565b50909695505050505050565b901515815260200190565b60208082526015908201527464732d6d6174682d7375622d756e646572666c6f7760581b604082015260600190565b602080825260119082015270115c1bd8da081b9bdd0818dc99585d1959607a1b604082015260600190565b602080825260139082015272506f6f6c20616c72656164792065786973747360681b604082015260600190565b602080825260159082015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b604082015260600190565b60208082526015908201527424b73b30b634b21039ba30b5b4b733903a37b5b2b760591b604082015260600190565b60208082526023908201527f43616e6e6f74207265636f76657220756e74696c20616c6c2065706f63687320604082015262195b9960ea1b606082015260800190565b60208082526014908201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604082015260600190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252601c908201527f53746172742074696d65206d75737420626520696e2066757475726500000000604082015260600190565b602080825260159082015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b604082015260600190565b602080825260119082015270043616e6e6f74207769746864726177203607c1b604082015260600190565b60208082526015908201527413dddb98589b194e88155b985d5d1a1bdc9a5e9959605a1b604082015260600190565b60208082526027908201527f53746172742074696d65206d7573742062652061667465722070726576696f756040820152660e640cae0dec6d60cb1b606082015260800190565b60208082526014908201527324b73b30b634b2103932bbb0b932103a37b5b2b760611b604082015260600190565b6020808252601490820152732737903a37b5b2b739903a37903932b1b7bb32b960611b604082015260600190565b602080825260159082015274115c1bd8da08185b1c9958591e481cdd185c9d1959605a1b604082015260600190565b6020808252818101527f4661696c656420746f207472616e736665722072657761726420746f6b656e73604082015260600190565b60208082526016908201527527bbb730b136329d1024b73b30b634b21037bbb732b960511b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526013908201527264732d6d6174682d6469762d62792d7a65726f60681b604082015260600190565b6020808252601c908201527f43616e6e6f74207265636f766572207374616b696e6720746f6b656e00000000604082015260600190565b6020808252600f908201526e506f6f6c206e6f742061637469766560881b604082015260600190565b90815260200190565b9182521515602082015260400190565b9283526020830191909152151560408201526060019056fea2646970667358221220011f7a681abc53d717cfeaa519b78d2259a65d8a5932aec8508156d97eb3be5664736f6c634300060c0033";

type IsbjornLPStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsbjornLPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsbjornLPStaking__factory extends ContractFactory {
  constructor(...args: IsbjornLPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IsbjornLPStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IsbjornLPStaking__factory {
    return super.connect(runner) as IsbjornLPStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsbjornLPStakingInterface {
    return new Interface(_abi) as IsbjornLPStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IsbjornLPStaking {
    return new Contract(address, _abi, runner) as unknown as IsbjornLPStaking;
  }
}
