/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  IsbjornLPStaking,
  IsbjornLPStakingInterface,
} from "../../../contracts/IGGY Dex/IsbjornLPStaking";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "EpochCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rates",
        type: "uint256[]",
      },
    ],
    name: "RewardsConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "EPOCH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    name: "configureEpochRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "createEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "createStakingPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "createdEpochs",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "epochs",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isStakingToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "pendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "stakingPools",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405262278d0060805234801561001757600080fd5b50600160005533806100445760405162461bcd60e51b815260040161003b9061009d565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350600160065560006007556100d4565b60208082526016908201527f4f776e61626c653a20496e76616c6964206f776e657200000000000000000000604082015260600190565b608051611de96100f360003980610a7b528061128b5250611de96000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c8063ad935e97116100ad578063c6b61e4c11610071578063c6b61e4c1461024c578063ef5cfb8c1461026e578063f2fde38b14610281578063f3fef3a314610294578063f6554b86146102a75761012c565b8063ad935e97146101ea578063adc9772e1461020b578063b42652e91461021e578063b97dd9e214610231578063be111af4146102395761012c565b806365f249a9116100f457806365f249a9146101aa57806376671808146101b25780638da5cb5b146101ba5780639be65a60146101cf578063a70b9f0c146101e25761012c565b80630f208beb146101315780632b9689581461015a57806336a8e097146101645780634a7b5072146101845780634ec594ff14610197575b600080fd5b61014461013f36600461168b565b6102ba565b6040516101519190611d82565b60405180910390f35b6101626102d7565b005b610177610172366004611670565b610349565b60405161015191906118e2565b6101446101923660046116bf565b61035e565b6101626101a536600461177e565b6104ee565b610144610888565b61014461088e565b6101c2610894565b6040516101519190611812565b6101626101dd366004611670565b6108a3565b610144610a79565b6101fd6101f8366004611670565b610a9d565b604051610151929190611d8b565b610162610219366004611704565b610ab9565b61016261022c366004611670565b610c63565b610144610c9e565b610162610247366004611670565b610cfe565b61025f61025a36600461174e565b610df3565b60405161015193929190611d9b565b61016261027c366004611670565b610e17565b61016261028f366004611670565b610fc1565b6101626102a2366004611704565b61105d565b6101626102b536600461174e565b6111e8565b600460209081526000928352604080842090915290825290205481565b6001546001600160a01b0316331461030a5760405162461bcd60e51b815260040161030190611b58565b60405180910390fd5b600180546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60056020526000908152604090205460ff1681565b6001600160a01b03808416600081815260046020908152604080832094871683529381528382209282526003905291822082610398610c9e565b90508015806103a657508154155b156103d05750506001600160a01b03831660009081526002909101602052604090205490506104e7565b6001600160a01b03808616600081815260028086016020908152604080842054878552838352818520968e168552959092018152818320938352929092522054801561047b576001600160a01b038716600090815260038501602052604081205461043c9042906112f5565b9050600061044a838361131e565b86549091506104769061046f9061046984670de0b6b3a764000061131e565b90611355565b8590611387565b935050505b6001600160a01b038716600090815260018601602052604090205485546104df916104be916104b890670de0b6b3a764000090610469908861131e565b906112f5565b6001600160a01b038916600090815260028801602052604090205490611387565b955050505050505b9392505050565b6001546001600160a01b031633146105185760405162461bcd60e51b815260040161030190611b58565b60075486111561053a5760405162461bcd60e51b81526004016103019061191c565b6001600160a01b03851660009081526003602052604090206001015460ff166105755760405162461bcd60e51b815260040161030190611d59565b60008681526002602052604090205442106105a25760405162461bcd60e51b815260040161030190611c2a565b8281146105c15760405162461bcd60e51b815260040161030190611974565b60008681526002602090815260408083206001600160a01b03891684526003909252822081546001830154929391926105f9916112f5565b905060005b868110156107e757600088888381811061061457fe5b90506020020160208101906106299190611670565b90506001600160a01b0381166106515760405162461bcd60e51b815260040161030190611bce565b600087878481811061065f57fe5b90506020020135116106835760405162461bcd60e51b815260040161030190611afe565b806001600160a01b03166323b872dd33308a8a878181106106a057fe5b905060200201356040518463ffffffff1660e01b81526004016106c593929190611826565b602060405180830381600087803b1580156106df57600080fd5b505af11580156106f3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610717919061172e565b6107335760405162461bcd60e51b815260040161030190611c59565b600061075a8489898681811061074557fe5b9050602002013561135590919063ffffffff16565b6001600160a01b03808d1660009081526002890160209081526040808320938716835292815282822084905560038901905220549091506107dd576004850180546001810182556000918252602080832090910180546001600160a01b0319166001600160a01b0386169081179091558854908352600388019091526040909120555b50506001016105fe565b50600483015460ff166108355760038301805460018082018355600092835260209092200180546001600160a01b0319166001600160a01b038b1617905560048401805460ff191690911790555b876001600160a01b0316897f35a7c1319246cbc1fded4bd9d0cef6f625546a56b4826a250d3cf1bd00851c66898989896040516108759493929190611863565b60405180910390a3505050505050505050565b60075481565b60065481565b6001546001600160a01b031681565b6001546001600160a01b031633146108cd5760405162461bcd60e51b815260040161030190611b58565b6001600160a01b03811660009081526005602052604090205460ff16156109065760405162461bcd60e51b815260040161030190611d22565b4260015b600754811161094b5760008181526002602052604090206001015482116109435760405162461bcd60e51b8152600401610301906119d2565b60010161090a565b506040516370a0823160e01b81526000906001600160a01b038416906370a082319061097b903090600401611812565b60206040518083038186803b15801561099357600080fd5b505afa1580156109a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cb9190611766565b9050600081116109ed5760405162461bcd60e51b815260040161030190611bfc565b60015460405163a9059cbb60e01b81526001600160a01b038581169263a9059cbb92610a219290911690859060040161184a565b602060405180830381600087803b158015610a3b57600080fd5b505af1158015610a4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a73919061172e565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6003602052600090815260409020805460019091015460ff1682565b60026000541415610adc5760405162461bcd60e51b815260040161030190611cbe565b600260005580610afe5760405162461bcd60e51b815260040161030190611a43565b6001600160a01b03821660009081526003602052604090206001015460ff16610b395760405162461bcd60e51b815260040161030190611d59565b610b4382336113aa565b6001600160a01b0382166000908152600360209081526040808320600483528184203385529092529091208154610b7a9084611387565b82558054610b889084611387565b81556040516323b872dd60e01b81526001600160a01b038516906323b872dd90610bba90339030908890600401611826565b602060405180830381600087803b158015610bd457600080fd5b505af1158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c919061172e565b50836001600160a01b0316336001600160a01b03167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd785604051610c509190611d82565b60405180910390a3505060016000555050565b6001600160a01b0381166000908152600460209081526040808320338452909152902054610c9290829061105d565b610c9b81610e17565b50565b60065460009042905b6007548111610cf4576000818152600260205260409020548210801590610cde575060008181526002602052604090206001015482105b15610cec579150610cfb9050565b600101610ca7565b5060009150505b90565b6001546001600160a01b03163314610d285760405162461bcd60e51b815260040161030190611b58565b6001600160a01b038116610d4e5760405162461bcd60e51b8152600401610301906119a3565b6001600160a01b03811660009081526003602052604090206001015460ff1615610d8a5760405162461bcd60e51b815260040161030190611947565b6001600160a01b03811660008181526003602090815260408083206001808201805460ff1990811683179091556005909452828520805490941617909255519092917f83a48fbcfc991335314e74d0496aab6a1987e992ddc85dddbcc4d6dd6ef2e9fc91a25050565b60026020526000908152604090208054600182015460049092015490919060ff1683565b60026000541415610e3a5760405162461bcd60e51b815260040161030190611cbe565b6002600055610e4981336113aa565b6001600160a01b038116600090815260036020908152604080832060048352818420338552909252822090915b6004830154811015610fb6576000836004018281548110610e9357fe5b60009182526020808320909101546001600160a01b0316808352600286019091526040909120549091508015610fac576001600160a01b0382166000818152600286016020526040808220919091555163a9059cbb60e01b815263a9059cbb90610f03903390859060040161184a565b602060405180830381600087803b158015610f1d57600080fd5b505af1158015610f31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f55919061172e565b50816001600160a01b0316866001600160a01b0316336001600160a01b03167fce405e67b4d6e56e438257e15f160ae28b450e6e7659bbc4c1f4e09a1ac846cb84604051610fa39190611d82565b60405180910390a45b5050600101610e76565b505060016000555050565b6001546001600160a01b03163314610feb5760405162461bcd60e51b815260040161030190611b58565b6001600160a01b0381166110115760405162461bcd60e51b815260040161030190611c8e565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600260005414156110805760405162461bcd60e51b815260040161030190611cbe565b6002600055806110a25760405162461bcd60e51b815260040161030190611b2d565b6001600160a01b0382166000908152600460209081526040808320338452909152902080548211156110e65760405162461bcd60e51b815260040161030190611a99565b6110f083336113aa565b6001600160a01b0383166000908152600360205260409020805461111490846112f5565b8155815461112290846112f5565b825560405163a9059cbb60e01b81526001600160a01b0385169063a9059cbb90611152903390879060040161184a565b602060405180830381600087803b15801561116c57600080fd5b505af1158015611180573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111a4919061172e565b50836001600160a01b0316336001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb85604051610c509190611d82565b6001546001600160a01b031633146112125760405162461bcd60e51b815260040161030190611b58565b4281116112315760405162461bcd60e51b815260040161030190611ac7565b6007541561126d5760075460009081526002602052604090206001015481101561126d5760405162461bcd60e51b815260040161030190611b87565b600780546001908101600081815260026020526040908190208581557f000000000000000000000000000000000000000000000000000000000000000086019381019390935592819055915182907f8ec3778c70816b98eca52742fc31690184a27bdbe390ba8b49b16ea22ff5320b906112e8908690611d82565b60405180910390a2505050565b808203828111156113185760405162461bcd60e51b8152600401610301906118ed565b92915050565b60008115806113395750508082028282828161133657fe5b04145b6113185760405162461bcd60e51b815260040161030190611a15565b60008082116113765760405162461bcd60e51b815260040161030190611cf5565b81838161137f57fe5b049392505050565b808201828110156113185760405162461bcd60e51b815260040161030190611a6b565b6001600160a01b038216600090815260036020526040902080546113ce575061160c565b60006113d8610c9e565b9050806113e657505061160c565b60005b600483015481101561160857600083600401828154811061140657fe5b6000918252602080832090910154858352600280835260408085206001600160a01b038c81168752920184528085209190921680855292529091205490915080611451575050611600565b6001600160a01b038216600090815260038601602052604081205442919061147a9083906112f5565b9050801561150257600061148e848361131e565b88549091506000906114ac9061046984670de0b6b3a764000061131e565b6001600160a01b038716600090815260028b0160205260409020549091506114d49082611387565b6001600160a01b038716600090815260028b01602090815260408083209390935560038c0190522084905550505b6001600160a01b038816156115fb576001600160a01b03808a1660009081526004602090815260408083208c85168452825280832093881683526001840182528083205460028c01909252822054835461156f92916104b891670de0b6b3a764000091610469919061131e565b6001600160a01b03871660009081526002840160205260409020549091506115979082611387565b6001600160a01b038716600090815260028085016020908152604080842094909455908c019052205482546115d991670de0b6b3a7640000916104699161131e565b6001600160a01b03871660009081526001909301602052604090922091909155505b505050505b6001016113e9565b5050505b5050565b80356001600160a01b038116811461131857600080fd5b60008083601f840112611638578182fd5b50813567ffffffffffffffff81111561164f578182fd5b602083019150836020808302850101111561166957600080fd5b9250929050565b600060208284031215611681578081fd5b6104e78383611610565b6000806040838503121561169d578081fd5b6116a78484611610565b91506116b68460208501611610565b90509250929050565b6000806000606084860312156116d3578081fd5b6116dd8585611610565b92506116ec8560208601611610565b91506116fb8560408601611610565b90509250925092565b60008060408385031215611716578182fd5b6117208484611610565b946020939093013593505050565b60006020828403121561173f578081fd5b815180151581146104e7578182fd5b60006020828403121561175f578081fd5b5035919050565b600060208284031215611777578081fd5b5051919050565b60008060008060008060808789031215611796578182fd5b8635955060208701356001600160a01b03811681146117b3578283fd5b9450604087013567ffffffffffffffff808211156117cf578384fd5b6117db8a838b01611627565b909650945060608901359150808211156117f3578384fd5b5061180089828a01611627565b979a9699509497509295939492505050565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6040808252810184905260008560608301825b878110156118a65760208381016001600160a01b036118958287611610565b168452935090910190600101611876565b5083810360208501528481526001600160fb1b038511156118c5578283fd5b602085029150818660208301370160200190815295945050505050565b901515815260200190565b60208082526015908201527464732d6d6174682d7375622d756e646572666c6f7760581b604082015260600190565b602080825260119082015270115c1bd8da081b9bdd0818dc99585d1959607a1b604082015260600190565b602080825260139082015272506f6f6c20616c72656164792065786973747360681b604082015260600190565b602080825260159082015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b604082015260600190565b60208082526015908201527424b73b30b634b21039ba30b5b4b733903a37b5b2b760591b604082015260600190565b60208082526023908201527f43616e6e6f74207265636f76657220756e74696c20616c6c2065706f63687320604082015262195b9960ea1b606082015260800190565b60208082526014908201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604082015260600190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252601c908201527f53746172742074696d65206d75737420626520696e2066757475726500000000604082015260600190565b602080825260159082015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b604082015260600190565b602080825260119082015270043616e6e6f74207769746864726177203607c1b604082015260600190565b60208082526015908201527413dddb98589b194e88155b985d5d1a1bdc9a5e9959605a1b604082015260600190565b60208082526027908201527f53746172742074696d65206d7573742062652061667465722070726576696f756040820152660e640cae0dec6d60cb1b606082015260800190565b60208082526014908201527324b73b30b634b2103932bbb0b932103a37b5b2b760611b604082015260600190565b6020808252601490820152732737903a37b5b2b739903a37903932b1b7bb32b960611b604082015260600190565b602080825260159082015274115c1bd8da08185b1c9958591e481cdd185c9d1959605a1b604082015260600190565b6020808252818101527f4661696c656420746f207472616e736665722072657761726420746f6b656e73604082015260600190565b60208082526016908201527527bbb730b136329d1024b73b30b634b21037bbb732b960511b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526013908201527264732d6d6174682d6469762d62792d7a65726f60681b604082015260600190565b6020808252601c908201527f43616e6e6f74207265636f766572207374616b696e6720746f6b656e00000000604082015260600190565b6020808252600f908201526e506f6f6c206e6f742061637469766560881b604082015260600190565b90815260200190565b9182521515602082015260400190565b9283526020830191909152151560408201526060019056fea26469706673582212202c02bf0ead1a1a535bc72f3290ecdc9d1c0d5a4e022c346e62447be2f7f9942564736f6c634300060c0033";

type IsbjornLPStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsbjornLPStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsbjornLPStaking__factory extends ContractFactory {
  constructor(...args: IsbjornLPStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IsbjornLPStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IsbjornLPStaking__factory {
    return super.connect(runner) as IsbjornLPStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsbjornLPStakingInterface {
    return new Interface(_abi) as IsbjornLPStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IsbjornLPStaking {
    return new Contract(address, _abi, runner) as unknown as IsbjornLPStaking;
  }
}
