/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  IsbjornStaking,
  IsbjornStakingInterface,
} from "../../../contracts/IGGY Dex/IsbjornStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReward",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getRewardTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserStakeInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "stakedAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeDuration",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isRewardToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amountReward",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_duration",
        type: "uint256",
      },
    ],
    name: "queueNewRewards",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardToken",
        type: "address",
      },
    ],
    name: "rewardPerToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rewardTokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewardPerTokenStored",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "queuedRewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastUpdateTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "periodFinish",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewardRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c06040523480156200001157600080fd5b506040516200157d3803806200157d83398101604081905262000034916200016e565b60016000553380620000635760405162461bcd60e51b81526004016200005a90620001c1565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350806001600160a01b03166080816001600160a01b031660601b81525050806001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156200010457600080fd5b505afa15801562000119573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200013f91906200019e565b60f81b7fff000000000000000000000000000000000000000000000000000000000000001660a05250620001f8565b60006020828403121562000180578081fd5b81516001600160a01b038116811462000197578182fd5b9392505050565b600060208284031215620001b0578081fd5b815160ff8116811462000197578182fd5b60208082526016908201527f4f776e61626c653a20496e76616c6964206f776e657200000000000000000000604082015260600190565b60805160601c60a05160f81c61135662000227600039508061074d52806109fa5280610b1052506113566000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063817b1cd2116100ad578063b5fd73f811610071578063b5fd73f81461024a578063c32d3ae21461025d578063c4f59f9b14610270578063f122977714610285578063f2fde38b1461029857610121565b8063817b1cd2146101f35780638da5cb5b146101fb5780638da7ad2314610203578063a694fc3a14610224578063a980356a1461023757610121565b80632e1a7d4d116100f45780632e1a7d4d1461019d5780633d18b912146101b05780637035ab98146101b857806372f702f3146101cb5780637bb7bed1146101e057610121565b80630700037d146101265780631f01345e14610153578063211dc32d146101735780632b96895814610193575b600080fd5b610139610134366004610f2b565b6102ab565b60405161014a9594939291906112fd565b60405180910390f35b610166610161366004610fb2565b6102da565b60405161014a9190611085565b610186610181366004610f46565b610567565b60405161014a91906112e6565b61019b61061a565b005b61019b6101ab366004610f9a565b610683565b61019b610842565b6101866101c6366004610f46565b6109db565b6101d36109f8565b60405161014a9190610fe7565b6101d36101ee366004610f9a565b610a1c565b610186610a43565b6101d3610a49565b610216610211366004610f2b565b610a58565b60405161014a9291906112ef565b61019b610232366004610f9a565b610a71565b610186610245366004610f46565b610c01565b610166610258366004610f2b565b610c1e565b61021661026b366004610f2b565b610c33565b610278610c73565b60405161014a9190611038565b610186610293366004610f2b565b610cd5565b61019b6102a6366004610f2b565b610cf0565b600260208190526000918252604090912080546001820154928201546003830154600490930154919392909185565b6001546000906001600160a01b031633146103105760405162461bcd60e51b815260040161030790611223565b60405180910390fd5b600084116103305760405162461bcd60e51b81526004016103079061119a565b600082116103505760405162461bcd60e51b8152600401610307906111f5565b6001600160a01b038316600090815260026020526040902060038101544210156103bc57600061039b8260040154610395428560030154610d8c90919063ffffffff16565b90610daf565b90506103b1846103ab8389610de6565b90610e09565b6004830155506103cc565b6103c68584610e09565b60048201555b6001600160a01b03841660009081526005602052604090205460ff16610450576006805460018082019092557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b0319166001600160a01b0387169081179091556000908152600560205260409020805460ff191690911790555b42600282018190556104629084610de6565b600382015560018101546104769086610de6565b60018201556040516323b872dd60e01b81526001600160a01b038516906323b872dd906104ab90339030908a90600401610ffb565b602060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fd9190610f7a565b6105195760405162461bcd60e51b8152600401610307906110ed565b836001600160a01b03167f0bb21cfddc3f8bd27069c32bb00be0ad26a02576b5a080444b0987140c3baa1586856040516105549291906112ef565b60405180910390a2506001949350505050565b6001600160a01b038116600090815260026020526040812060038101548290610591904290610e3b565b905060006105ac836002015483610d8c90919063ffffffff16565b905060006105c7846004015483610daf90919063ffffffff16565b9050600854600014156105e1576000945050505050610614565b6008546001600160a01b03881660009081526007602052604090205461060d91906103ab908490610daf565b9450505050505b92915050565b6001546001600160a01b031633146106445760405162461bcd60e51b815260040161030790611223565b600180546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b600260005414156106a65760405162461bcd60e51b815260040161030790611282565b6002600055806106c85760405162461bcd60e51b8152600401610307906111ca565b336000908152600760205260409020548111156106f75760405162461bcd60e51b81526004016103079061116c565b61070033610e53565b60085461070d9082610d8c565b6008553360009081526007602052604090205461072a9082610d8c565b336000818152600760205260409081902092909255905163a9059cbb60e01b81527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169163a9059cbb9161078b9190859060040161101f565b602060405180830381600087803b1580156107a557600080fd5b505af11580156107b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107dd9190610f7a565b6107f95760405162461bcd60e51b8152600401610307906110ed565b336001600160a01b03167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d58260405161083291906112e6565b60405180910390a2506001600055565b600260005414156108655760405162461bcd60e51b815260040161030790611282565b600260005561087333610e53565b60005b6006548110156109d35760006006828154811061088f57fe5b60009182526020808320909101543383526004825260408084206001600160a01b039092168085529190925291205490915080156109c9573360008181526004602081815260408084206001600160a01b038816808652925280842093909355915163a9059cbb60e01b8152919263a9059cbb9261090f9286910161101f565b602060405180830381600087803b15801561092957600080fd5b505af115801561093d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109619190610f7a565b61097d5760405162461bcd60e51b8152600401610307906110ed565b816001600160a01b0316336001600160a01b03167f540798df468d7b23d11f156fdb954cb19ad414d150722a7b6d55ba369dea792e836040516109c091906112e6565b60405180910390a35b5050600101610876565b506001600055565b600360209081526000928352604080842090915290825290205481565b7f000000000000000000000000000000000000000000000000000000000000000081565b60068181548110610a2957fe5b6000918252602090912001546001600160a01b0316905081565b60085481565b6001546001600160a01b031681565b6007602052600090815260409020805460019091015482565b60026000541415610a945760405162461bcd60e51b815260040161030790611282565b600260005580610ab65760405162461bcd60e51b815260040161030790611116565b610abf33610e53565b600854610acc9082610de6565b6008553360009081526007602052604090208054610aeb574260018201555b8054610af79083610de6565b81556040516323b872dd60e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90610b4990339030908790600401610ffb565b602060405180830381600087803b158015610b6357600080fd5b505af1158015610b77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9b9190610f7a565b610bb75760405162461bcd60e51b8152600401610307906110ed565b336001600160a01b03167f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d83604051610bf091906112e6565b60405180910390a250506001600055565b600460209081526000928352604080842090915290825290205481565b60056020526000908152604090205460ff1681565b6001600160a01b03811660009081526007602052604081208054600182015483929190610c61576000610c69565b816001015442035b9250925050915091565b60606006805480602002602001604051908101604052809291908181526020018280548015610ccb57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610cad575b5050505050905090565b6001600160a01b031660009081526002602052604090205490565b6001546001600160a01b03163314610d1a5760405162461bcd60e51b815260040161030790611223565b6001600160a01b038116610d405760405162461bcd60e51b815260040161030790611252565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b808203828111156106145760405162461bcd60e51b815260040161030790611090565b6000811580610dca57505080820282828281610dc757fe5b04145b6106145760405162461bcd60e51b8152600401610307906110bf565b808201828110156106145760405162461bcd60e51b81526004016103079061113e565b6000808211610e2a5760405162461bcd60e51b8152600401610307906112b9565b818381610e3357fe5b049392505050565b6000818310610e4a5781610e4c565b825b9392505050565b60005b600654811015610f1057600060068281548110610e6f57fe5b60009182526020808320909101546001600160a01b039081168084526002909252604090922090925090841615610f0057610eaa8483610567565b6001600160a01b03808616600090815260046020908152604080832093871683529290522055610ed982610cd5565b6001600160a01b038086166000908152600360209081526040808320938716835292905220555b4260029091015550600101610e56565b5050565b80356001600160a01b038116811461061457600080fd5b600060208284031215610f3c578081fd5b610e4c8383610f14565b60008060408385031215610f58578081fd5b610f628484610f14565b9150610f718460208501610f14565b90509250929050565b600060208284031215610f8b578081fd5b81518015158114610e4c578182fd5b600060208284031215610fab578081fd5b5035919050565b600080600060608486031215610fc6578081fd5b83359250610fd78560208601610f14565b9150604084013590509250925092565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156110795783516001600160a01b031683529284019291840191600101611054565b50909695505050505050565b901515815260200190565b60208082526015908201527464732d6d6174682d7375622d756e646572666c6f7760581b604082015260600190565b60208082526014908201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604082015260600190565b6020808252600f908201526e151c985b9cd9995c8819985a5b1959608a1b604082015260600190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b60208082526016908201527543616e6e6f742071756575652030207265776172647360501b604082015260600190565b602080825260119082015270043616e6e6f74207769746864726177203607c1b604082015260600190565b60208082526014908201527304475726174696f6e206d757374206265203e20360641b604082015260600190565b60208082526015908201527413dddb98589b194e88155b985d5d1a1bdc9a5e9959605a1b604082015260600190565b60208082526016908201527527bbb730b136329d1024b73b30b634b21037bbb732b960511b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526013908201527264732d6d6174682d6469762d62792d7a65726f60681b604082015260600190565b90815260200190565b918252602082015260400190565b948552602085019390935260408401919091526060830152608082015260a0019056fea264697066735822122050dc9645f8aa5c36bedf3b5d7e45f10176be8c28f43be7720ce0810ce2abe4c564736f6c634300060c0033";

type IsbjornStakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsbjornStakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsbjornStaking__factory extends ContractFactory {
  constructor(...args: IsbjornStakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _stakingToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  override deploy(
    _stakingToken: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_stakingToken, overrides || {}) as Promise<
      IsbjornStaking & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IsbjornStaking__factory {
    return super.connect(runner) as IsbjornStaking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsbjornStakingInterface {
    return new Interface(_abi) as IsbjornStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IsbjornStaking {
    return new Contract(address, _abi, runner) as unknown as IsbjornStaking;
  }
}
