/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  IsbjornLPStakingOld,
  IsbjornLPStakingOldInterface,
} from "../../../../contracts/IGGY Dex/view.sol/IsbjornLPStakingOld";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "EpochConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    name: "PoolConfigured",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [],
    name: "EPOCH_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "claimRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
    ],
    name: "configureEpoch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNumber",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "rewardTokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "rewardAmounts",
        type: "uint256[]",
      },
    ],
    name: "configurePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "earned",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "epochs",
    outputs: [
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endTime",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "exit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "getEpochPoolInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalSupply",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
    ],
    name: "getEpochPoolRewards",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "rewardToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "totalAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "ratePerSecond",
            type: "uint256",
          },
        ],
        internalType: "struct IsbjornLPStakingOld.RewardConfig[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "epochNum",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "getPoolRewardRate",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "getUserPendingRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "rewardToken",
        type: "address",
      },
    ],
    name: "getUserRewardDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isStakingToken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "recoverToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revokeOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "stakingToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405262278d0060805234801561001757600080fd5b50600160005533806100445760405162461bcd60e51b815260040161003b90610093565b60405180910390fd5b600180546001600160a01b0319166001600160a01b0383169081179091556040516000907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506100ca565b60208082526016908201527f4f776e61626c653a20496e76616c6964206f776e657200000000000000000000604082015260600190565b60805161215f6100ee600039806106a25280610a435280610d03525061215f6000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80639be65a60116100b8578063bde4ad121161007c578063bde4ad1214610280578063c6b61e4c14610293578063c7137980146102b5578063ef5cfb8c146102d5578063f2fde38b146102e8578063f3fef3a3146102fb57610142565b80639be65a6014610237578063a70b9f0c1461024a578063adc9772e14610252578063b42652e914610265578063b97dd9e21461027857610142565b806336a8e0971161010a57806336a8e097146101c15780633ec61238146101e157806376671808146101f4578063772aa56e146101fc5780638da5cb5b1461020f57806397822afe1461022457610142565b806301a433d7146101475780630dfc1f0f146101715780630f208beb14610191578063233adf1d146101a45780632b968958146101b7575b600080fd5b61015a6101553660046119b6565b61030e565b6040516101689291906120ec565b60405180910390f35b61018461017f3660046118f7565b610343565b60405161016891906120e3565b61018461019f3660046118c3565b61037f565b6101846101b23660046118f7565b61039c565b6101bf6103d7565b005b6101d46101cf3660046118a8565b610449565b6040516101689190611bf6565b6101bf6101ef366004611a1a565b61045e565b6101846108b1565b61018461020a3660046119d9565b6108b7565b610217610976565b6040516101689190611ac4565b6101bf610232366004611aa3565b610985565b6101bf6102453660046118a8565b610aba565b610184610d01565b6101bf61026036600461193c565b610d25565b6101bf6102733660046118a8565b610f76565b610184610fb1565b61018461028e3660046118f7565b611051565b6102a66102a1366004611986565b611199565b604051610168939291906120fc565b6102c86102c33660046119b6565b6111bd565b6040516101689190611b94565b6101bf6102e33660046118a8565b611263565b6101bf6102f63660046118a8565b611448565b6101bf61030936600461193c565b6114e4565b60008281526002602081815260408084206001600160a01b03861685528301909152909120805491015460ff165b9250929050565b6001600160a01b0380841660009081526004602090815260408083208685168452825280832093851683526001909301905220545b9392505050565b600460209081526000928352604080842090915290825290205481565b6001600160a01b0380841660009081526004602090815260408083208685168452825280832093851683526002909301905220549392505050565b6001546001600160a01b0316331461040a5760405162461bcd60e51b815260040161040190611e2d565b60405180910390fd5b600180546001600160a01b031916905560405160009033907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3565b60056020526000908152604090205460ff1681565b6001546001600160a01b031633146104885760405162461bcd60e51b815260040161040190611e2d565b60008681526002602052604090206004015460ff166104b95760405162461bcd60e51b815260040161040190611c5f565b6001600160a01b0385166104df5760405162461bcd60e51b815260040161040190611c8d565b8281146104fe5760405162461bcd60e51b815260040161040190611c30565b8261051b5760405162461bcd60e51b815260040161040190611d6e565b6000868152600260205260409020805442106105495760405162461bcd60e51b815260040161040190611f7e565b6001600160a01b0386166000908152600280830160205260409091209081015460ff166105b15760038201805460018082018355600092835260209092200180546001600160a01b0319166001600160a01b038a1617905560028201805460ff191690911790555b6105bf600182016000611802565b6000805b868110156107615760008888838181106105d957fe5b90506020020160208101906105ee91906118a8565b6001600160a01b031614156106155760405162461bcd60e51b815260040161040190611ee4565b600086868381811061062357fe5b90506020020135116106475760405162461bcd60e51b815260040161040190611dd3565b8260010160405180606001604052808a8a8581811061066257fe5b905060200201602081019061067791906118a8565b6001600160a01b0316815260200188888581811061069157fe5b9050602002013581526020016106e27f00000000000000000000000000000000000000000000000000000000000000008a8a878181106106cd57fe5b9050602002013561172e90919063ffffffff16565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b0390931692909217825592820151928101929092556040015160029091015561075786868381811061074157fe5b905060200201358361176090919063ffffffff16565b91506001016105c3565b5060005b868110156108425785858281811061077957fe5b9050602002013588888381811061078c57fe5b90506020020160208101906107a191906118a8565b6001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016107cc9190611ac4565b60206040518083038186803b1580156107e457600080fd5b505afa1580156107f8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061081c919061199e565b101561083a5760405162461bcd60e51b815260040161040190611ea3565b600101610765565b506001600160a01b03881660008181526005602052604090819020805460ff19166001179055518a907fa94fac93c25205c45bfbc96288e5e66616c28b8b080bd5c6d345559f0127397f9061089e908b908b908b908b90611b15565b60405180910390a3505050505050505050565b60035481565b60008381526002602081815260408084206001600160a01b0387168552830190915282209081015460ff166108f0576000915050610378565b60005b600182015481101561096a57836001600160a01b031682600101828154811061091857fe5b60009182526020909120600390910201546001600160a01b031614156109625781600101818154811061094757fe5b90600052602060002090600302016002015492505050610378565b6001016108f3565b50600095945050505050565b6001546001600160a01b031681565b6001546001600160a01b031633146109af5760405162461bcd60e51b815260040161040190611e2d565b4281116109ce5760405162461bcd60e51b815260040161040190611d9c565b60035482116109ef5760405162461bcd60e51b815260040161040190611f12565b6001821115610a2e576000198201600090815260026020526040902060010154811015610a2e5760405162461bcd60e51b815260040161040190611e5c565b600082815260026020526040908190208281557f0000000000000000000000000000000000000000000000000000000000000000830160018083019190915560048201805460ff19169091179055905183907f6a84bbfd20664965b5e9ce37b8f3e422aa0a3949911fca023ef3fa06a958cb9790610aad9085906120e3565b60405180910390a2505050565b6001546001600160a01b03163314610ae45760405162461bcd60e51b815260040161040190611e2d565b6001600160a01b03811660009081526005602052604090205460ff1615610b1d5760405162461bcd60e51b815260040161040190612041565b6000610b27610fb1565b90508015610bf5576000818152600260205260408120905b6003820154811015610bf2576000826002016000846003018481548110610b6257fe5b60009182526020808320909101546001600160a01b03168352820192909252604001812091505b6001820154811015610be857816001018181548110610ba457fe5b60009182526020909120600390910201546001600160a01b0387811691161415610be05760405162461bcd60e51b8152600401610401906120a1565b600101610b89565b5050600101610b3f565b50505b6040516370a0823160e01b81526000906001600160a01b038416906370a0823190610c24903090600401611ac4565b60206040518083038186803b158015610c3c57600080fd5b505afa158015610c50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c74919061199e565b60015460405163a9059cbb60e01b81529192506001600160a01b038086169263a9059cbb92610ca99216908590600401611afc565b602060405180830381600087803b158015610cc357600080fd5b505af1158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb9190611966565b50505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b60026000541415610d485760405162461bcd60e51b815260040161040190611fdd565b600260005580610d6a5760405162461bcd60e51b815260040161040190611cea565b6000610d74610fb1565b905060008111610d965760405162461bcd60e51b815260040161040190611f55565b60008181526002602081815260408084206001600160a01b03881685528084019092529092209081015460ff16610ddf5760405162461bcd60e51b815260040161040190612078565b6001600160a01b03851660009081526004602090815260408083203384529091528120905b6001830154811015610e7e576000836001018281548110610e2157fe5b600091825260208220600390910201546001600160a01b03169150610e47338a84611051565b6001600160a01b03909216600090815260028501602090815260408083209490945560018087019091529290204290555001610e04565b508154610e8b9086611760565b82558054610e999086611760565b81556040516323b872dd60e01b81526001600160a01b038716906323b872dd90610ecb90339030908a90600401611ad8565b602060405180830381600087803b158015610ee557600080fd5b505af1158015610ef9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f1d9190611966565b50856001600160a01b0316336001600160a01b03167f5dac0c1b1112564a045ba943c9d50270893e8e826c49be8e7073adc713ab7bd787604051610f6191906120e3565b60405180910390a35050600160005550505050565b6001600160a01b0381166000908152600460209081526040808320338452909152902054610fa59082906114e4565b610fae81611263565b50565b6003546000908152600260205260408120544290811015610fd657600091505061104e565b6003545b600354600a0181116110475760008181526002602052604090206004015460ff16801561101557506000818152600260205260409020548210155b8015611031575060008181526002602052604090206001015482105b1561103f57915061104e9050565b600101610fda565b6000925050505b90565b60008061105c610fb1565b90508061106d576000915050610378565b6001600160a01b038085166000818152600460209081526040808320948a16835293815283822085835260028083528584209484529390930190529190912080546110be5760009350505050610378565b60006110cb8488886108b7565b9050806110df576000945050505050610378565b6000848152600260209081526040808320546001600160a01b038a168452600187019092528220546111379161111491611783565b600087815260026020526040902060010154611131904290611799565b906117a8565b905061118c61116b84600001546111658461115f878a600001546117cb90919063ffffffff16565b906117cb565b9061172e565b6001600160a01b038916600090815260028701602052604090205490611760565b9998505050505050505050565b60026020526000908152604090208054600182015460049092015490919060ff1683565b60008281526002602081815260408084206001600160a01b038616855290920181528183206001018054835181840281018401909452808452606094919290919084015b82821015611256576000848152602090819020604080516060810182526003860290920180546001600160a01b0316835260018082015484860152600290910154918301919091529083529092019101611201565b5050505090505b92915050565b600260005414156112865760405162461bcd60e51b815260040161040190611fdd565b60026000908155611295610fb1565b9050600081116112b75760405162461bcd60e51b815260040161040190611f55565b60008181526002602081815260408084206001600160a01b038716855290920181528183206004825282842033855290915290822090915b600183015481101561143c57600083600101828154811061130c57fe5b600091825260208220600390910201546001600160a01b03169150611332338884611051565b90508015611432576001600160a01b0382166000818152600286016020908152604080832083905560018801909152908190204290555163a9059cbb60e01b815263a9059cbb906113899033908590600401611afc565b602060405180830381600087803b1580156113a357600080fd5b505af11580156113b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113db9190611966565b50816001600160a01b0316876001600160a01b0316336001600160a01b03167fce405e67b4d6e56e438257e15f160ae28b450e6e7659bbc4c1f4e09a1ac846cb8460405161142991906120e3565b60405180910390a45b50506001016112ef565b50506001600055505050565b6001546001600160a01b031633146114725760405162461bcd60e51b815260040161040190611e2d565b6001600160a01b0381166114985760405162461bcd60e51b815260040161040190611fad565b600180546001600160a01b0319166001600160a01b03831690811790915560405133907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a350565b600260005414156115075760405162461bcd60e51b815260040161040190611fdd565b6002600055806115295760405162461bcd60e51b815260040161040190611e02565b6001600160a01b03821660009081526004602090815260408083203384529091529020805482111561156d5760405162461bcd60e51b815260040161040190611d40565b6000611577610fb1565b9050600081116115995760405162461bcd60e51b815260040161040190611f55565b60008181526002602081815260408084206001600160a01b038916855290920190528120905b60018201548110156116395760008260010182815481106115dc57fe5b600091825260208220600390910201546001600160a01b03169150611602338984611051565b6001600160a01b039092166000908152600287016020908152604080832094909455600180890190915292902042905550016115bf565b50805461164690856117a8565b8155825461165490856117a8565b835560405163a9059cbb60e01b81526001600160a01b0386169063a9059cbb906116849033908890600401611afc565b602060405180830381600087803b15801561169e57600080fd5b505af11580156116b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116d69190611966565b50846001600160a01b0316336001600160a01b03167fd1c19fbcd4551a5edfb66d43d2e337c04837afda3482b42bdf569a8fccdae5fb8660405161171a91906120e3565b60405180910390a350506001600055505050565b600080821161174f5760405162461bcd60e51b815260040161040190612014565b81838161175857fe5b049392505050565b8082018281101561125d5760405162461bcd60e51b815260040161040190611d12565b60008183116117925781610378565b5090919050565b60008183106117925781610378565b8082038281111561125d5760405162461bcd60e51b815260040161040190611c01565b60008115806117e6575050808202828282816117e357fe5b04145b61125d5760405162461bcd60e51b815260040161040190611cbc565b5080546000825560030290600052602060002090810190610fae91905b8082111561184b5780546001600160a01b0319168155600060018201819055600282015560030161181f565b5090565b80356001600160a01b038116811461125d57600080fd5b60008083601f840112611877578182fd5b50813567ffffffffffffffff81111561188e578182fd5b602083019150836020808302850101111561033c57600080fd5b6000602082840312156118b9578081fd5b610378838361184f565b600080604083850312156118d5578081fd5b6118df848461184f565b91506118ee846020850161184f565b90509250929050565b60008060006060848603121561190b578081fd5b611915858561184f565b9250611924856020860161184f565b9150611933856040860161184f565b90509250925092565b6000806040838503121561194e578182fd5b611958848461184f565b946020939093013593505050565b600060208284031215611977578081fd5b81518015158114610378578182fd5b600060208284031215611997578081fd5b5035919050565b6000602082840312156119af578081fd5b5051919050565b600080604083850312156119c8578182fd5b823591506118ee846020850161184f565b6000806000606084860312156119ed578283fd5b8335925060208401356119ff81612114565b91506040840135611a0f81612114565b809150509250925092565b60008060008060008060808789031215611a32578182fd5b863595506020870135611a4481612114565b9450604087013567ffffffffffffffff80821115611a60578384fd5b611a6c8a838b01611866565b90965094506060890135915080821115611a84578384fd5b50611a9189828a01611866565b979a9699509497509295939492505050565b60008060408385031215611ab5578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03929092168252602082015260400190565b6040808252810184905260008560608301825b87811015611b585760208381016001600160a01b03611b47828761184f565b168452935090910190600101611b28565b5083810360208501528481526001600160fb1b03851115611b77578283fd5b602085029150818660208301370160200190815295945050505050565b602080825282518282018190526000919060409081850190868401855b82811015611be957815180516001600160a01b0316855286810151878601528501518585015260609093019290850190600101611bb1565b5091979650505050505050565b901515815260200190565b60208082526015908201527464732d6d6174682d7375622d756e646572666c6f7760581b604082015260600190565b602080825260159082015274082e4e4c2f240d8cadccee8d040dad2e6dac2e8c6d605b1b604082015260600190565b602080825260149082015273115c1bd8da081b9bdd0818dbdb999a59dd5c995960621b604082015260600190565b60208082526015908201527424b73b30b634b21039ba30b5b4b733903a37b5b2b760591b604082015260600190565b60208082526014908201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604082015260600190565b6020808252600e908201526d043616e6e6f74207374616b6520360941b604082015260600190565b60208082526014908201527364732d6d6174682d6164642d6f766572666c6f7760601b604082015260600190565b602080825260149082015273496e73756666696369656e742062616c616e636560601b604082015260600190565b6020808252601490820152734d7573742070726f76696465207265776172647360601b604082015260600190565b6020808252601c908201527f53746172742074696d65206d75737420626520696e2066757475726500000000604082015260600190565b602080825260159082015274125b9d985b1a59081c995dd85c9908185b5bdd5b9d605a1b604082015260600190565b602080825260119082015270043616e6e6f74207769746864726177203607c1b604082015260600190565b60208082526015908201527413dddb98589b194e88155b985d5d1a1bdc9a5e9959605a1b604082015260600190565b60208082526027908201527f53746172742074696d65206d7573742062652061667465722070726576696f756040820152660e640cae0dec6d60cb1b606082015260800190565b60208082526021908201527f496e73756666696369656e742072657761726420746f6b656e2062616c616e636040820152606560f81b606082015260800190565b60208082526014908201527324b73b30b634b2103932bbb0b932103a37b5b2b760611b604082015260600190565b60208082526023908201527f43616e6e6f74206d6f646966792070617374206f722063757272656e742065706040820152620dec6d60eb1b606082015260800190565b6020808252600f908201526e09cde40c2c6e8d2ecca40cae0dec6d608b1b604082015260600190565b602080825260159082015274115c1bd8da08185b1c9958591e481cdd185c9d1959605a1b604082015260600190565b60208082526016908201527527bbb730b136329d1024b73b30b634b21037bbb732b960511b604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b60208082526013908201527264732d6d6174682d6469762d62792d7a65726f60681b604082015260600190565b6020808252601c908201527f43616e6e6f74207265636f766572207374616b696e6720746f6b656e00000000604082015260600190565b6020808252600f908201526e506f6f6c206e6f742061637469766560881b604082015260600190565b60208082526022908201527f43616e6e6f74207265636f766572206163746976652072657761726420746f6b60408201526132b760f11b606082015260800190565b90815260200190565b9182521515602082015260400190565b92835260208301919091521515604082015260600190565b6001600160a01b0381168114610fae57600080fdfea2646970667358221220d905829ef18e99660bc03b81d70c90ad81a7a3018c419eb70c919ec76dd8b67064736f6c634300060c0033";

type IsbjornLPStakingOldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IsbjornLPStakingOldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IsbjornLPStakingOld__factory extends ContractFactory {
  constructor(...args: IsbjornLPStakingOldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IsbjornLPStakingOld & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): IsbjornLPStakingOld__factory {
    return super.connect(runner) as IsbjornLPStakingOld__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IsbjornLPStakingOldInterface {
    return new Interface(_abi) as IsbjornLPStakingOldInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IsbjornLPStakingOld {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IsbjornLPStakingOld;
  }
}
