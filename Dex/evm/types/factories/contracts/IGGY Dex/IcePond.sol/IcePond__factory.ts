/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  IcePond,
  IcePondInterface,
} from "../../../../contracts/IGGY Dex/IcePond.sol/IcePond";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Burn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    name: "Mint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1In",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "Swap",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve0",
        type: "uint112",
      },
      {
        indexed: false,
        internalType: "uint112",
        name: "reserve1",
        type: "uint112",
      },
    ],
    name: "Sync",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MINIMUM_LIQUIDITY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERMIT_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "uint256",
        name: "amount0",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getReserves",
    outputs: [
      {
        internalType: "uint112",
        name: "_reserve0",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "_reserve1",
        type: "uint112",
      },
      {
        internalType: "uint32",
        name: "_blockTimestampLast",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token1",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "kLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "liquidity",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "skim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount0Out",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount1Out",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "swap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "sync",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600d60808190526c24b3b3bc902628102a37b5b2b760991b60a090815262000030916000919062000191565b50604080518082019091526003808252620494c560ec1b60209092019182526200005d9160019162000191565b506001600e553480156200007057600080fd5b5060004690507f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040518082805460018160011615610100020316600290048015620000f85780601f10620000d5576101008083540402835291820191620000f8565b820191906000526020600020905b815481529060010190602001808311620000e3575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c090940190945250508051910120600555600780546001600160a01b031916331790556200022d565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001d457805160ff191683800117855562000204565b8280016001018555821562000204579182015b8281111562000204578251825591602001919060010190620001e7565b506200021292915062000216565b5090565b5b8082111562000212576000815560010162000217565b61240d806200023d6000396000f3fe608060405234801561001057600080fd5b50600436106101495760003560e01c8063022c0d9f1461014e57806306fdde03146101da5780630902f1ac14610257578063095ea7b31461028f5780630dfe1681146102cf57806318160ddd146102f357806323b872dd1461030d57806330adf81f14610343578063313ce5671461034b5780633644e51514610369578063485cc955146103715780635909c0d51461039f5780635a3d5493146103a75780636a627842146103af57806370a08231146103d55780637464fc3d146103fb5780637ecebe001461040357806389afcb441461042957806395d89b4114610468578063a9059cbb14610470578063ba9a7a561461049c578063bc25cf77146104a4578063c45a0155146104ca578063d21220a7146104d2578063d505accf146104da578063dd62ed3e1461052b578063fff6cae914610559575b600080fd5b6101d86004803603608081101561016457600080fd5b8135916020810135916001600160a01b036040830135169190810190608081016060820135600160201b81111561019a57600080fd5b8201836020820111156101ac57600080fd5b803590602001918460018302840111600160201b831117156101cd57600080fd5b509092509050610561565b005b6101e2610aee565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561021c578181015183820152602001610204565b50505050905090810190601f1680156102495780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61025f610b7c565b604080516001600160701b03948516815292909316602083015263ffffffff168183015290519081900360600190f35b6102bb600480360360408110156102a557600080fd5b506001600160a01b038135169060200135610ba6565b604080519115158252519081900360200190f35b6102d7610bbd565b604080516001600160a01b039092168252519081900360200190f35b6102fb610bcc565b60408051918252519081900360200190f35b6102bb6004803603606081101561032357600080fd5b506001600160a01b03813581169160208101359091169060400135610bd2565b6102fb610c66565b610353610c78565b6040805160ff9092168252519081900360200190f35b6102fb610c7d565b6101d86004803603604081101561038757600080fd5b506001600160a01b0381358116916020013516610c83565b6102fb610d05565b6102fb610d0b565b6102fb600480360360208110156103c557600080fd5b50356001600160a01b0316610d11565b6102fb600480360360208110156103eb57600080fd5b50356001600160a01b031661118b565b6102fb61119d565b6102fb6004803603602081101561041957600080fd5b50356001600160a01b03166111a3565b61044f6004803603602081101561043f57600080fd5b50356001600160a01b03166111b5565b6040805192835260208301919091528051918290030190f35b6101e2611547565b6102bb6004803603604081101561048657600080fd5b506001600160a01b0381351690602001356115a1565b6102fb6115ae565b6101d8600480360360208110156104ba57600080fd5b50356001600160a01b03166115b4565b6102d7611724565b6102d7611733565b6101d8600480360360e08110156104f057600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611742565b6102fb6004803603604081101561054157600080fd5b506001600160a01b038135811691602001351661192d565b6101d861194a565b600e546001146105aa576040805162461bcd60e51b815260206004820152600f60248201526e125cd89a9bdc9b8e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600e55841515806105bd5750600084115b6105f85760405162461bcd60e51b81526004018080602001828103825260238152602001806123076023913960400191505060405180910390fd5b600080610603610b7c565b5091509150816001600160701b0316871080156106285750806001600160701b031686105b610679576040805162461bcd60e51b815260206004820152601f60248201527f4973626a6f726e3a20494e53554646494349454e545f4c495155494449545900604482015290519081900360640190fd5b60085460095460009182916001600160a01b039182169190811690891682148015906106b75750806001600160a01b0316896001600160a01b031614155b6106fe576040805162461bcd60e51b81526020600482015260136024820152724973626a6f726e3a20494e56414c49445f544f60681b604482015290519081900360640190fd5b60075460408051622fcfcb60e31b815290516000926001600160a01b03169163017e7e58916004808301926020929190829003018186803b15801561074257600080fd5b505afa158015610756573d6000803e3d6000fd5b505050506040513d602081101561076c57600080fd5b505190508b1561078257610782838d8c84611aaa565b8a1561079457610794828c8c84611aaa565b871561084657896001600160a01b031663e608f932338e8e8d8d6040518663ffffffff1660e01b815260040180866001600160a01b03168152602001858152602001848152602001806020018281038252848482818152602001925080828437600081840152601f19601f8201169050808301925050509650505050505050600060405180830381600087803b15801561082d57600080fd5b505af1158015610841573d6000803e3d6000fd5b505050505b604080516370a0823160e01b815230600482015290516001600160a01b038516916370a08231916024808301926020929190829003018186803b15801561088c57600080fd5b505afa1580156108a0573d6000803e3d6000fd5b505050506040513d60208110156108b657600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038416916370a0823191602480820192602092909190829003018186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d602081101561092c57600080fd5b505193506000925050506001600160701b0385168a9003831161095057600061095f565b89856001600160701b03160383035b9050600089856001600160701b031603831161097c57600061098b565b89856001600160701b03160383035b9050600082118061099c5750600081115b6109d75760405162461bcd60e51b81526004018080602001828103825260228152602001806123506022913960400191505060405180910390fd5b60006109f96109e7846003611aed565b6109f3876103e8611aed565b90611b50565b90506000610a0b6109e7846003611aed565b9050610a30620f4240610a2a6001600160701b038b8116908b16611aed565b90611aed565b610a3a8383611aed565b1015610a7a576040805162461bcd60e51b815260206004820152600a6024820152694973626a6f726e3a204b60b01b604482015290519081900360640190fd5b5050610a8884848888611ba0565b60408051838152602081018390528082018d9052606081018c905290516001600160a01b038b169133917fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229181900360800190a350506001600e55505050505050505050565b6000805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b745780601f10610b4957610100808354040283529160200191610b74565b820191906000526020600020905b815481529060010190602001808311610b5757829003601f168201915b505050505081565b600a546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b6000610bb3338484611d4f565b5060015b92915050565b6008546001600160a01b031681565b60025481565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001914610c51576001600160a01b0384166000908152600460209081526040808320338452909152902054610c2c9083611b50565b6001600160a01b03851660009081526004602090815260408083203384529091529020555b610c5c848484611db1565b5060019392505050565b60008051602061239283398151915281565b601281565b60055481565b6007546001600160a01b03163314610cd7576040805162461bcd60e51b815260206004820152601260248201527124b9b13537b9371d102327a92124a22222a760711b604482015290519081900360640190fd5b600880546001600160a01b039384166001600160a01b03199182161790915560098054929093169116179055565b600b5481565b600c5481565b6000600e54600114610d5c576040805162461bcd60e51b815260206004820152600f60248201526e125cd89a9bdc9b8e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600e81905580610d6c610b7c565b50600854604080516370a0823160e01b815230600482015290519395509193506000926001600160a01b03909116916370a08231916024808301926020929190829003018186803b158015610dc057600080fd5b505afa158015610dd4573d6000803e3d6000fd5b505050506040513d6020811015610dea57600080fd5b5051600954604080516370a0823160e01b815230600482015290519293506000926001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015610e3d57600080fd5b505afa158015610e51573d6000803e3d6000fd5b505050506040513d6020811015610e6757600080fd5b505190506000610e80836001600160701b038716611b50565b90506000610e97836001600160701b038716611b50565b90506000610ea58787611e4d565b6002549091508061107c5760075460408051637cd07e4760e01b815290516000926001600160a01b031691637cd07e47916004808301926020929190829003018186803b158015610ef557600080fd5b505afa158015610f09573d6000803e3d6000fd5b505050506040513d6020811015610f1f57600080fd5b50519050336001600160a01b0382161415610ffa57806001600160a01b03166340dc0e376040518163ffffffff1660e01b815260040160206040518083038186803b158015610f6d57600080fd5b505afa158015610f81573d6000803e3d6000fd5b505050506040513d6020811015610f9757600080fd5b505199508915801590610fac57506000198a14155b610ff5576040805162461bcd60e51b81526020600482015260156024820152744261642064657369726564206c697175696469747960581b604482015290519081900360640190fd5b611076565b6001600160a01b0381161561104f576040805162461bcd60e51b815260206004820152601660248201527526bab9ba103737ba103430bb329036b4b3b930ba37b960511b604482015290519081900360640190fd5b6110676103e86109f36110628888611aed565b611f8d565b995061107660006103e8611fdf565b506110bf565b6110bc6001600160701b0389166110938684611aed565b8161109a57fe5b046001600160701b0389166110af8685611aed565b816110b657fe5b04612058565b98505b600089116110fe5760405162461bcd60e51b815260040180806020018281038252602681526020018061232a6026913960400191505060405180910390fd5b6111088a8a611fdf565b61111486868a8a611ba0565b811561113e57600a5461113a906001600160701b0380821691600160701b900416611aed565b600d555b6040805185815260208101859052815133927f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f928290030190a250506001600e5550949695505050505050565b60036020526000908152604090205481565b600d5481565b60066020526000908152604090205481565b600080600e54600114611201576040805162461bcd60e51b815260206004820152600f60248201526e125cd89a9bdc9b8e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600e81905580611211610b7c565b50600854600954604080516370a0823160e01b815230600482015290519496509294506001600160a01b039182169391169160009184916370a08231916024808301926020929190829003018186803b15801561126d57600080fd5b505afa158015611281573d6000803e3d6000fd5b505050506040513d602081101561129757600080fd5b5051604080516370a0823160e01b815230600482015290519192506000916001600160a01b038516916370a08231916024808301926020929190829003018186803b1580156112e557600080fd5b505afa1580156112f9573d6000803e3d6000fd5b505050506040513d602081101561130f57600080fd5b50513060009081526003602052604081205491925061132e8888611e4d565b6002549091508061133f8487611aed565b8161134657fe5b049a50806113548486611aed565b8161135b57fe5b04995060008b11801561136e575060008a115b6113a95760405162461bcd60e51b81526004018080602001828103825260268152602001806123b26026913960400191505060405180910390fd5b6113b33084612070565b6113be878d8d6120ef565b6113c9868d8c6120ef565b604080516370a0823160e01b815230600482015290516001600160a01b038916916370a08231916024808301926020929190829003018186803b15801561140f57600080fd5b505afa158015611423573d6000803e3d6000fd5b505050506040513d602081101561143957600080fd5b5051604080516370a0823160e01b815230600482015290519196506001600160a01b038816916370a0823191602480820192602092909190829003018186803b15801561148557600080fd5b505afa158015611499573d6000803e3d6000fd5b505050506040513d60208110156114af57600080fd5b505193506114bf85858b8b611ba0565b81156114e957600a546114e5906001600160701b0380821691600160701b900416611aed565b600d555b604080518c8152602081018c905281516001600160a01b038f169233927fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496929081900390910190a35050505050505050506001600e81905550915091565b60018054604080516020600284861615610100026000190190941693909304601f81018490048402820184019092528181529291830182828015610b745780601f10610b4957610100808354040283529160200191610b74565b6000610bb3338484611db1565b6103e881565b600e546001146115fd576040805162461bcd60e51b815260206004820152600f60248201526e125cd89a9bdc9b8e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600e55600854600954600a54604080516370a0823160e01b815230600482015290516001600160a01b0394851694909316926116a692859287926116a1926001600160701b03169185916370a0823191602480820192602092909190829003018186803b15801561166f57600080fd5b505afa158015611683573d6000803e3d6000fd5b505050506040513d602081101561169957600080fd5b505190611b50565b6120ef565b61171a81846116a1600a600e9054906101000a90046001600160701b03166001600160701b0316856001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561166f57600080fd5b50506001600e5550565b6007546001600160a01b031681565b6009546001600160a01b031681565b4284101561178a576040805162461bcd60e51b815260206004820152601060248201526f125cd89a9bdc9b8e881156141254915160821b604482015290519081900360640190fd5b6005546001600160a01b0380891660008181526006602090815260408083208054600180820190925582516000805160206123928339815191528186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e280820193601f1981019281900390910190855afa158015611893573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906118c95750886001600160a01b0316816001600160a01b0316145b611917576040805162461bcd60e51b815260206004820152601a6024820152794973626a6f726e3a20494e56414c49445f5349474e415455524560301b604482015290519081900360640190fd5b611922898989611d4f565b505050505050505050565b600460209081526000928352604080842090915290825290205481565b600e54600114611993576040805162461bcd60e51b815260206004820152600f60248201526e125cd89a9bdc9b8e881313d0d2d151608a1b604482015290519081900360640190fd5b6000600e55600854604080516370a0823160e01b81523060048201529051611aa3926001600160a01b0316916370a08231916024808301926020929190829003018186803b1580156119e457600080fd5b505afa1580156119f8573d6000803e3d6000fd5b505050506040513d6020811015611a0e57600080fd5b5051600954604080516370a0823160e01b815230600482015290516001600160a01b03909216916370a0823191602480820192602092909190829003018186803b158015611a5b57600080fd5b505afa158015611a6f573d6000803e3d6000fd5b505050506040513d6020811015611a8557600080fd5b5051600a546001600160701b0380821691600160701b900416611ba0565b6001600e55565b6001600160a01b03811615611adc576103e88304611ac98583836120ef565b611ad685848387036120ef565b50611ae7565b611ae78483856120ef565b50505050565b6000811580611b0857505080820282828281611b0557fe5b04145b610bb7576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b604482015290519081900360640190fd5b80820382811115610bb7576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160701b038411801590611bbe57506001600160701b038311155b611c03576040805162461bcd60e51b81526020600482015260116024820152704973626a6f726e3a204f564552464c4f5760781b604482015290519081900360640190fd5b600a5463ffffffff42811691600160e01b90048116820390811615801590611c3357506001600160701b03841615155b8015611c4757506001600160701b03831615155b15611cb2578063ffffffff16611c6f85611c6086612280565b6001600160e01b031690612292565b600b80546001600160e01b03929092169290920201905563ffffffff8116611c9a84611c6087612280565b600c80546001600160e01b0392909216929092020190555b600a80546001600160701b0319166001600160701b0388811691909117600160701b600160e01b031916600160701b8883168102919091176001600160e01b0316600160e01b63ffffffff871602179283905560408051848416815291909304909116602082015281517f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1929181900390910190a1505050505050565b6001600160a01b03808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b038316600090815260036020526040902054611dd49082611b50565b6001600160a01b038085166000908152600360205260408082209390935590841681522054611e0390826122b7565b6001600160a01b03808416600081815260036020908152604091829020949094558051858152905191939287169260008051602061237283398151915292918290030190a3505050565b600080600760009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611e9e57600080fd5b505afa158015611eb2573d6000803e3d6000fd5b505050506040513d6020811015611ec857600080fd5b5051600d546001600160a01b038216158015945091925090611f79578015611f74576000611f056110626001600160701b03888116908816611aed565b90506000611f1283611f8d565b905080821115611f71576000611f34611f2b8484611b50565b60025490611aed565b90506000611f4d83611f47866005611aed565b906122b7565b90506000818381611f5a57fe5b0490508015611f6d57611f6d8782611fdf565b5050505b50505b611f85565b8015611f85576000600d555b505092915050565b60006003821115611fd0575080600160028204015b81811015611fca57809150600281828581611fb957fe5b040181611fc257fe5b049050611fa2565b50611fda565b8115611fda575060015b919050565b600254611fec90826122b7565b6002556001600160a01b03821660009081526003602052604090205461201290826122b7565b6001600160a01b03831660008181526003602090815260408083209490945583518581529351929391926000805160206123728339815191529281900390910190a35050565b60008183106120675781612069565b825b9392505050565b6001600160a01b0382166000908152600360205260409020546120939082611b50565b6001600160a01b0383166000908152600360205260409020556002546120b99082611b50565b6002556040805182815290516000916001600160a01b038516916000805160206123728339815191529181900360200190a35050565b60408051808201825260198152787472616e7366657228616464726573732c75696e743235362960381b60209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1781529251815160009460609489169392918291908083835b602083106121985780518252601f199092019160209182019101612179565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146121fa576040519150601f19603f3d011682016040523d82523d6000602084013e6121ff565b606091505b509150915081801561222d57508051158061222d575080806020019051602081101561222a57600080fd5b50515b612279576040805162461bcd60e51b8152602060048201526018602482015277125cd89a9bdc9b8e881514905394d1915497d1905253115160421b604482015290519081900360640190fd5b5050505050565b6001600160701b0316600160701b0290565b60006001600160701b0382166001600160e01b038416816122af57fe5b049392505050565b80820182811015610bb7576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe4973626a6f726e3a20494e53554646494349454e545f4f55545055545f414d4f554e544973626a6f726e3a20494e53554646494349454e545f4c49515549444954595f4d494e5445444973626a6f726e3a20494e53554646494349454e545f494e5055545f414d4f554e54ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c94973626a6f726e3a20494e53554646494349454e545f4c49515549444954595f4255524e4544a2646970667358221220434888a93b37ea6ee4b8bc516c71d55900b5d17606097f3448d5a79ba9f2881764736f6c634300060c0033";

type IcePondConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IcePondConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IcePond__factory extends ContractFactory {
  constructor(...args: IcePondConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      IcePond & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): IcePond__factory {
    return super.connect(runner) as IcePond__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IcePondInterface {
    return new Interface(_abi) as IcePondInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IcePond {
    return new Contract(address, _abi, runner) as unknown as IcePond;
  }
}
